{"version":3,"sources":["webpack://kind-web/./src/apps/Web.KindWebsite.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,SAAS;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,I","file":"870.index.js","sourcesContent":["module.exports = (function() {\n    function word_to_u16(w) {\n        var u = 0;\n        for (var i = 0; i < 16; ++i) {\n            u = u | (w._ === 'Word.i' ? 1 << i : 0);\n            w = w.pred;\n        };\n        return u;\n    };\n\n    function u16_to_word(u) {\n        var w = {\n            _: 'Word.e'\n        };\n        for (var i = 0; i < 16; ++i) {\n            w = {\n                _: (u >>> (16 - i - 1)) & 1 ? 'Word.i' : 'Word.o',\n                pred: w\n            };\n        };\n        return w;\n    };\n\n    function u16_to_bits(x) {\n        var s = '';\n        for (var i = 0; i < 16; ++i) {\n            s = (x & 1 ? '1' : '0') + s;\n            x = x >>> 1;\n        }\n        return s;\n    };\n\n    function word_to_u32(w) {\n        var u = 0;\n        for (var i = 0; i < 32; ++i) {\n            u = u | (w._ === 'Word.i' ? 1 << i : 0);\n            w = w.pred;\n        };\n        return u;\n    };\n\n    function u32_to_word(u) {\n        var w = {\n            _: 'Word.e'\n        };\n        for (var i = 0; i < 32; ++i) {\n            w = {\n                _: (u >>> (32 - i - 1)) & 1 ? 'Word.i' : 'Word.o',\n                pred: w\n            };\n        };\n        return w;\n    };\n\n    function u32_for(state, from, til, func) {\n        for (var i = from; i < til; ++i) {\n            state = func(i)(state);\n        }\n        return state;\n    };\n\n    function word_to_u64(w) {\n        var u = 0n;\n        for (var i = 0n; i < 64n; i += 1n) {\n            u = u | (w._ === 'Word.i' ? 1n << i : 0n);\n            w = w.pred;\n        };\n        return u;\n    };\n\n    function u64_to_word(u) {\n        var w = {\n            _: 'Word.e'\n        };\n        for (var i = 0n; i < 64n; i += 1n) {\n            w = {\n                _: (u >> (64n - i - 1n)) & 1n ? 'Word.i' : 'Word.o',\n                pred: w\n            };\n        };\n        return w;\n    };\n\n    function u32array_to_buffer32(a) {\n        function go(a, buffer) {\n            switch (a._) {\n                case 'Array.tip':\n                    buffer.push(a.value);\n                    break;\n                case 'Array.tie':\n                    go(a.lft, buffer);\n                    go(a.rgt, buffer);\n                    break;\n            }\n            return buffer;\n        };\n        return new Uint32Array(go(a, []));\n    };\n\n    function buffer32_to_u32array(b) {\n        function go(b) {\n            if (b.length === 1) {\n                return {\n                    _: 'Array.tip',\n                    value: b[0]\n                };\n            } else {\n                var lft = go(b.slice(0, b.length / 2));\n                var rgt = go(b.slice(b.length / 2));\n                return {\n                    _: 'Array.tie',\n                    lft,\n                    rgt\n                };\n            };\n        };\n        return go(b);\n    };\n\n    function buffer32_to_depth(b) {\n        return BigInt(Math.log(b.length) / Math.log(2));\n    };\n    var list_for = list => nil => cons => {\n        while (list._ !== 'List.nil') {\n            nil = cons(list.head)(nil);\n            list = list.tail;\n        }\n        return nil;\n    };\n    const inst_unit = x => x(null);\n    const elim_unit = (x => {\n        var $1 = (() => c0 => {\n            var self = x;\n            switch (\"unit\") {\n                case 'unit':\n                    var $0 = c0;\n                    return $0;\n            };\n        })();\n        return $1;\n    });\n    const inst_bool = x => x(true)(false);\n    const elim_bool = (x => {\n        var $4 = (() => c0 => c1 => {\n            var self = x;\n            if (self) {\n                var $2 = c2;\n                return $2;\n            } else {\n                var $3 = c2;\n                return $3;\n            };\n        })();\n        return $4;\n    });\n    const inst_nat = x => x(0n)(x0 => 1n + x0);\n    const elim_nat = (x => {\n        var $8 = (() => c0 => c1 => {\n            var self = x;\n            if (self === 0n) {\n                var $5 = c2;\n                return $5;\n            } else {\n                var $6 = (self - 1n);\n                var $7 = c2($6);\n                return $7;\n            };\n        })();\n        return $8;\n    });\n    const inst_bits = x => x('')(x0 => x0 + '0')(x0 => x0 + '1');\n    const elim_bits = (x => {\n        var $14 = (() => c0 => c1 => c2 => {\n            var self = x;\n            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {\n                case 'o':\n                    var $9 = self.slice(0, -1);\n                    var $10 = c1($9);\n                    return $10;\n                case 'i':\n                    var $11 = self.slice(0, -1);\n                    var $12 = c2($11);\n                    return $12;\n                case 'e':\n                    var $13 = c0;\n                    return $13;\n            };\n        })();\n        return $14;\n    });\n    const inst_u16 = x => x(x0 => word_to_u16(x0));\n    const elim_u16 = (x => {\n        var $17 = (() => c0 => {\n            var self = x;\n            switch ('u16') {\n                case 'u16':\n                    var $15 = u16_to_word(self);\n                    var $16 = c0($15);\n                    return $16;\n            };\n        })();\n        return $17;\n    });\n    const inst_u32 = x => x(x0 => word_to_u32(x0));\n    const elim_u32 = (x => {\n        var $20 = (() => c0 => {\n            var self = x;\n            switch ('u32') {\n                case 'u32':\n                    var $18 = u32_to_word(self);\n                    var $19 = c0($18);\n                    return $19;\n            };\n        })();\n        return $20;\n    });\n    const inst_u64 = x => x(x0 => word_to_u64(x0));\n    const elim_u64 = (x => {\n        var $23 = (() => c0 => {\n            var self = x;\n            switch ('u64') {\n                case 'u64':\n                    var $21 = u64_to_word(self);\n                    var $22 = c0($21);\n                    return $22;\n            };\n        })();\n        return $23;\n    });\n    const inst_string = x => x('')(x0 => x1 => (String.fromCharCode(x0) + x1));\n    const elim_string = (x => {\n        var $28 = (() => c0 => c1 => {\n            var self = x;\n            if (self.length === 0) {\n                var $24 = c2;\n                return $24;\n            } else {\n                var $25 = self.charCodeAt(0);\n                var $26 = self.slice(1);\n                var $27 = c2($25)($26);\n                return $27;\n            };\n        })();\n        return $28;\n    });\n    const inst_buffer32 = x => x(x0 => x1 => u32array_to_buffer32(x1));\n    const elim_buffer32 = (x => {\n        var $32 = (() => c0 => {\n            var self = x;\n            switch ('b32') {\n                case 'b32':\n                    var $29 = buffer32_to_depth(self);\n                    var $30 = buffer32_to_u32array(self);\n                    var $31 = c0($29)($30);\n                    return $31;\n            };\n        })();\n        return $32;\n    });\n\n    function Web$KindWebsite$State$new$(_screen_size$1, _page$2) {\n        var $33 = ({\n            _: 'Web.KindWebsite.State.new',\n            'screen_size': _screen_size$1,\n            'page': _page$2\n        });\n        return $33;\n    };\n    const Web$KindWebsite$State$new = x0 => x1 => Web$KindWebsite$State$new$(x0, x1);\n\n    function Pair$new$(_fst$3, _snd$4) {\n        var $34 = ({\n            _: 'Pair.new',\n            'fst': _fst$3,\n            'snd': _snd$4\n        });\n        return $34;\n    };\n    const Pair$new = x0 => x1 => Pair$new$(x0, x1);\n\n    function U32$new$(_value$1) {\n        var $35 = word_to_u32(_value$1);\n        return $35;\n    };\n    const U32$new = x0 => U32$new$(x0);\n\n    function Nat$apply$(_n$2, _f$3, _x$4) {\n        var Nat$apply$ = (_n$2, _f$3, _x$4) => ({\n            ctr: 'TCO',\n            arg: [_n$2, _f$3, _x$4]\n        });\n        var Nat$apply = _n$2 => _f$3 => _x$4 => Nat$apply$(_n$2, _f$3, _x$4);\n        var arg = [_n$2, _f$3, _x$4];\n        while (true) {\n            let [_n$2, _f$3, _x$4] = arg;\n            var R = (() => {\n                var self = _n$2;\n                if (self === 0n) {\n                    var $36 = _x$4;\n                    return $36;\n                } else {\n                    var $37 = (self - 1n);\n                    var $38 = Nat$apply$($37, _f$3, _f$3(_x$4));\n                    return $38;\n                };\n            })();\n            if (R.ctr === 'TCO') arg = R.arg;\n            else return R;\n        }\n    };\n    const Nat$apply = x0 => x1 => x2 => Nat$apply$(x0, x1, x2);\n\n    function Word$(_size$1) {\n        var $39 = null;\n        return $39;\n    };\n    const Word = x0 => Word$(x0);\n    const Word$e = ({\n        _: 'Word.e'\n    });\n\n    function Word$i$(_pred$2) {\n        var $40 = ({\n            _: 'Word.i',\n            'pred': _pred$2\n        });\n        return $40;\n    };\n    const Word$i = x0 => Word$i$(x0);\n\n    function Word$o$(_pred$2) {\n        var $41 = ({\n            _: 'Word.o',\n            'pred': _pred$2\n        });\n        return $41;\n    };\n    const Word$o = x0 => Word$o$(x0);\n\n    function Word$inc$(_word$2) {\n        var self = _word$2;\n        switch (self._) {\n            case 'Word.o':\n                var $43 = self.pred;\n                var $44 = Word$i$($43);\n                var $42 = $44;\n                break;\n            case 'Word.i':\n                var $45 = self.pred;\n                var $46 = Word$o$(Word$inc$($45));\n                var $42 = $46;\n                break;\n            case 'Word.e':\n                var $47 = Word$e;\n                var $42 = $47;\n                break;\n        };\n        return $42;\n    };\n    const Word$inc = x0 => Word$inc$(x0);\n\n    function Word$zero$(_size$1) {\n        var self = _size$1;\n        if (self === 0n) {\n            var $49 = Word$e;\n            var $48 = $49;\n        } else {\n            var $50 = (self - 1n);\n            var $51 = Word$o$(Word$zero$($50));\n            var $48 = $51;\n        };\n        return $48;\n    };\n    const Word$zero = x0 => Word$zero$(x0);\n\n    function Nat$to_word$(_size$1, _n$2) {\n        var $52 = Nat$apply$(_n$2, Word$inc, Word$zero$(_size$1));\n        return $52;\n    };\n    const Nat$to_word = x0 => x1 => Nat$to_word$(x0, x1);\n\n    function Nat$succ$(_pred$1) {\n        var $53 = 1n + _pred$1;\n        return $53;\n    };\n    const Nat$succ = x0 => Nat$succ$(x0);\n    const Nat$zero = 0n;\n    const Nat$to_u32 = a0 => (Number(a0) >>> 0);\n    const Web$KindWebsite$Page$home = ({\n        _: 'Web.KindWebsite.Page.home'\n    });\n\n    function DOM$node$(_tag$1, _props$2, _style$3, _children$4) {\n        var $54 = ({\n            _: 'DOM.node',\n            'tag': _tag$1,\n            'props': _props$2,\n            'style': _style$3,\n            'children': _children$4\n        });\n        return $54;\n    };\n    const DOM$node = x0 => x1 => x2 => x3 => DOM$node$(x0, x1, x2, x3);\n\n    function BitsMap$(_A$1) {\n        var $55 = null;\n        return $55;\n    };\n    const BitsMap = x0 => BitsMap$(x0);\n\n    function Map$(_V$1) {\n        var $56 = null;\n        return $56;\n    };\n    const Map = x0 => Map$(x0);\n    const BitsMap$new = ({\n        _: 'BitsMap.new'\n    });\n\n    function BitsMap$tie$(_val$2, _lft$3, _rgt$4) {\n        var $57 = ({\n            _: 'BitsMap.tie',\n            'val': _val$2,\n            'lft': _lft$3,\n            'rgt': _rgt$4\n        });\n        return $57;\n    };\n    const BitsMap$tie = x0 => x1 => x2 => BitsMap$tie$(x0, x1, x2);\n\n    function Maybe$some$(_value$2) {\n        var $58 = ({\n            _: 'Maybe.some',\n            'value': _value$2\n        });\n        return $58;\n    };\n    const Maybe$some = x0 => Maybe$some$(x0);\n    const Maybe$none = ({\n        _: 'Maybe.none'\n    });\n\n    function BitsMap$set$(_bits$2, _val$3, _map$4) {\n        var self = _bits$2;\n        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {\n            case 'o':\n                var $60 = self.slice(0, -1);\n                var self = _map$4;\n                switch (self._) {\n                    case 'BitsMap.tie':\n                        var $62 = self.val;\n                        var $63 = self.lft;\n                        var $64 = self.rgt;\n                        var $65 = BitsMap$tie$($62, BitsMap$set$($60, _val$3, $63), $64);\n                        var $61 = $65;\n                        break;\n                    case 'BitsMap.new':\n                        var $66 = BitsMap$tie$(Maybe$none, BitsMap$set$($60, _val$3, BitsMap$new), BitsMap$new);\n                        var $61 = $66;\n                        break;\n                };\n                var $59 = $61;\n                break;\n            case 'i':\n                var $67 = self.slice(0, -1);\n                var self = _map$4;\n                switch (self._) {\n                    case 'BitsMap.tie':\n                        var $69 = self.val;\n                        var $70 = self.lft;\n                        var $71 = self.rgt;\n                        var $72 = BitsMap$tie$($69, $70, BitsMap$set$($67, _val$3, $71));\n                        var $68 = $72;\n                        break;\n                    case 'BitsMap.new':\n                        var $73 = BitsMap$tie$(Maybe$none, BitsMap$new, BitsMap$set$($67, _val$3, BitsMap$new));\n                        var $68 = $73;\n                        break;\n                };\n                var $59 = $68;\n                break;\n            case 'e':\n                var self = _map$4;\n                switch (self._) {\n                    case 'BitsMap.tie':\n                        var $75 = self.lft;\n                        var $76 = self.rgt;\n                        var $77 = BitsMap$tie$(Maybe$some$(_val$3), $75, $76);\n                        var $74 = $77;\n                        break;\n                    case 'BitsMap.new':\n                        var $78 = BitsMap$tie$(Maybe$some$(_val$3), BitsMap$new, BitsMap$new);\n                        var $74 = $78;\n                        break;\n                };\n                var $59 = $74;\n                break;\n        };\n        return $59;\n    };\n    const BitsMap$set = x0 => x1 => x2 => BitsMap$set$(x0, x1, x2);\n    const Bits$e = '';\n    const Bits$o = a0 => (a0 + '0');\n    const Bits$i = a0 => (a0 + '1');\n    const Bits$concat = a0 => a1 => (a1 + a0);\n\n    function Word$to_bits$(_a$2) {\n        var self = _a$2;\n        switch (self._) {\n            case 'Word.o':\n                var $80 = self.pred;\n                var $81 = (Word$to_bits$($80) + '0');\n                var $79 = $81;\n                break;\n            case 'Word.i':\n                var $82 = self.pred;\n                var $83 = (Word$to_bits$($82) + '1');\n                var $79 = $83;\n                break;\n            case 'Word.e':\n                var $84 = Bits$e;\n                var $79 = $84;\n                break;\n        };\n        return $79;\n    };\n    const Word$to_bits = x0 => Word$to_bits$(x0);\n    const U16$to_bits = a0 => (u16_to_bits(a0));\n\n    function String$to_bits$(_str$1) {\n        var self = _str$1;\n        if (self.length === 0) {\n            var $86 = Bits$e;\n            var $85 = $86;\n        } else {\n            var $87 = self.charCodeAt(0);\n            var $88 = self.slice(1);\n            var $89 = (String$to_bits$($88) + (u16_to_bits($87)));\n            var $85 = $89;\n        };\n        return $85;\n    };\n    const String$to_bits = x0 => String$to_bits$(x0);\n\n    function Map$from_list$(_xs$2) {\n        var self = _xs$2;\n        switch (self._) {\n            case 'List.cons':\n                var $91 = self.head;\n                var $92 = self.tail;\n                var self = $91;\n                switch (self._) {\n                    case 'Pair.new':\n                        var $94 = self.fst;\n                        var $95 = self.snd;\n                        var $96 = BitsMap$set$(String$to_bits$($94), $95, Map$from_list$($92));\n                        var $93 = $96;\n                        break;\n                };\n                var $90 = $93;\n                break;\n            case 'List.nil':\n                var $97 = BitsMap$new;\n                var $90 = $97;\n                break;\n        };\n        return $90;\n    };\n    const Map$from_list = x0 => Map$from_list$(x0);\n    const List$nil = ({\n        _: 'List.nil'\n    });\n\n    function Pair$(_A$1, _B$2) {\n        var $98 = null;\n        return $98;\n    };\n    const Pair = x0 => x1 => Pair$(x0, x1);\n\n    function List$cons$(_head$2, _tail$3) {\n        var $99 = ({\n            _: 'List.cons',\n            'head': _head$2,\n            'tail': _tail$3\n        });\n        return $99;\n    };\n    const List$cons = x0 => x1 => List$cons$(x0, x1);\n\n    function DOM$text$(_value$1) {\n        var $100 = ({\n            _: 'DOM.text',\n            'value': _value$1\n        });\n        return $100;\n    };\n    const DOM$text = x0 => DOM$text$(x0);\n\n    function Web$Kind$component$title$(_title$1) {\n        var $101 = DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"font-size\", \"20px\"), List$cons$(Pair$new$(\"font-family\", \"Helvetica\"), List$cons$(Pair$new$(\"font-weight\", \"bold\"), List$nil)))), List$cons$(DOM$text$(_title$1), List$nil));\n        return $101;\n    };\n    const Web$Kind$component$title = x0 => Web$Kind$component$title$(x0);\n    const List$for = a0 => a1 => a2 => (list_for(a0)(a1)(a2));\n\n    function List$(_A$1) {\n        var $102 = null;\n        return $102;\n    };\n    const List = x0 => List$(x0);\n\n    function Web$Kind$component$list$(_items$1) {\n        var _li$2 = List$nil;\n        var _li$3 = (() => {\n            var $105 = _li$2;\n            var $106 = _items$1;\n            let _li$4 = $105;\n            let _item$3;\n            while ($106._ === 'List.cons') {\n                _item$3 = $106.head;\n                var $105 = List$cons$(DOM$node$(\"li\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"margin-top\", \"5px\"), List$nil)), List$cons$(_item$3, List$nil)), _li$4);\n                _li$4 = $105;\n                $106 = $106.tail;\n            }\n            return _li$4;\n        })();\n        var $103 = DOM$node$(\"ul\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"list-style-type\", \"circle\"), List$cons$(Pair$new$(\"margin-left\", \"20px\"), List$nil))), _li$3);\n        return $103;\n    };\n    const Web$Kind$component$list = x0 => Web$Kind$component$list$(x0);\n\n    function Web$Kind$component$link$(_txt$1, _href$2) {\n        var $107 = DOM$node$(\"a\", Map$from_list$(List$cons$(Pair$new$(\"href\", _href$2), List$cons$(Pair$new$(\"target\", \"_blank\"), List$nil))), Map$from_list$(List$cons$(Pair$new$(\"cursor\", \"pointer\"), List$nil)), List$cons$(DOM$text$(_txt$1), List$nil));\n        return $107;\n    };\n    const Web$Kind$component$link = x0 => x1 => Web$Kind$component$link$(x0, x1);\n\n    function Buffer32$new$(_depth$1, _array$2) {\n        var $108 = u32array_to_buffer32(_array$2);\n        return $108;\n    };\n    const Buffer32$new = x0 => x1 => Buffer32$new$(x0, x1);\n\n    function Array$(_A$1, _depth$2) {\n        var $109 = null;\n        return $109;\n    };\n    const Array = x0 => x1 => Array$(x0, x1);\n\n    function Array$tip$(_value$2) {\n        var $110 = ({\n            _: 'Array.tip',\n            'value': _value$2\n        });\n        return $110;\n    };\n    const Array$tip = x0 => Array$tip$(x0);\n\n    function Array$tie$(_lft$3, _rgt$4) {\n        var $111 = ({\n            _: 'Array.tie',\n            'lft': _lft$3,\n            'rgt': _rgt$4\n        });\n        return $111;\n    };\n    const Array$tie = x0 => x1 => Array$tie$(x0, x1);\n\n    function Array$alloc$(_depth$2, _x$3) {\n        var self = _depth$2;\n        if (self === 0n) {\n            var $113 = Array$tip$(_x$3);\n            var $112 = $113;\n        } else {\n            var $114 = (self - 1n);\n            var _half$5 = Array$alloc$($114, _x$3);\n            var $115 = Array$tie$(_half$5, _half$5);\n            var $112 = $115;\n        };\n        return $112;\n    };\n    const Array$alloc = x0 => x1 => Array$alloc$(x0, x1);\n    const U32$zero = U32$new$(Word$zero$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$zero))))))))))))))))))))))))))))))))));\n    const Buffer32$alloc = a0 => (new Uint32Array(2 ** Number(a0)));\n\n    function Word$bit_length$go$(_word$2, _c$3, _n$4) {\n        var Word$bit_length$go$ = (_word$2, _c$3, _n$4) => ({\n            ctr: 'TCO',\n            arg: [_word$2, _c$3, _n$4]\n        });\n        var Word$bit_length$go = _word$2 => _c$3 => _n$4 => Word$bit_length$go$(_word$2, _c$3, _n$4);\n        var arg = [_word$2, _c$3, _n$4];\n        while (true) {\n            let [_word$2, _c$3, _n$4] = arg;\n            var R = (() => {\n                var self = _word$2;\n                switch (self._) {\n                    case 'Word.o':\n                        var $116 = self.pred;\n                        var $117 = Word$bit_length$go$($116, Nat$succ$(_c$3), _n$4);\n                        return $117;\n                    case 'Word.i':\n                        var $118 = self.pred;\n                        var $119 = Word$bit_length$go$($118, Nat$succ$(_c$3), Nat$succ$(_c$3));\n                        return $119;\n                    case 'Word.e':\n                        var $120 = _n$4;\n                        return $120;\n                };\n            })();\n            if (R.ctr === 'TCO') arg = R.arg;\n            else return R;\n        }\n    };\n    const Word$bit_length$go = x0 => x1 => x2 => Word$bit_length$go$(x0, x1, x2);\n\n    function Word$bit_length$(_word$2) {\n        var $121 = Word$bit_length$go$(_word$2, 0n, 0n);\n        return $121;\n    };\n    const Word$bit_length = x0 => Word$bit_length$(x0);\n\n    function U32$bit_length$(_size$1) {\n        var self = _size$1;\n        switch ('u32') {\n            case 'u32':\n                var $123 = u32_to_word(self);\n                var $124 = Word$bit_length$($123);\n                var $122 = $124;\n                break;\n        };\n        return $122;\n    };\n    const U32$bit_length = x0 => U32$bit_length$(x0);\n    const Bool$false = false;\n    const Bool$true = true;\n\n    function Word$shift_left1$aux$(_word$2, _prev$3) {\n        var self = _word$2;\n        switch (self._) {\n            case 'Word.o':\n                var $126 = self.pred;\n                var self = _prev$3;\n                if (self) {\n                    var $128 = Word$i$(Word$shift_left1$aux$($126, Bool$false));\n                    var $127 = $128;\n                } else {\n                    var $129 = Word$o$(Word$shift_left1$aux$($126, Bool$false));\n                    var $127 = $129;\n                };\n                var $125 = $127;\n                break;\n            case 'Word.i':\n                var $130 = self.pred;\n                var self = _prev$3;\n                if (self) {\n                    var $132 = Word$i$(Word$shift_left1$aux$($130, Bool$true));\n                    var $131 = $132;\n                } else {\n                    var $133 = Word$o$(Word$shift_left1$aux$($130, Bool$true));\n                    var $131 = $133;\n                };\n                var $125 = $131;\n                break;\n            case 'Word.e':\n                var $134 = Word$e;\n                var $125 = $134;\n                break;\n        };\n        return $125;\n    };\n    const Word$shift_left1$aux = x0 => x1 => Word$shift_left1$aux$(x0, x1);\n\n    function Word$shift_left1$(_word$2) {\n        var self = _word$2;\n        switch (self._) {\n            case 'Word.o':\n                var $136 = self.pred;\n                var $137 = Word$o$(Word$shift_left1$aux$($136, Bool$false));\n                var $135 = $137;\n                break;\n            case 'Word.i':\n                var $138 = self.pred;\n                var $139 = Word$o$(Word$shift_left1$aux$($138, Bool$true));\n                var $135 = $139;\n                break;\n            case 'Word.e':\n                var $140 = Word$e;\n                var $135 = $140;\n                break;\n        };\n        return $135;\n    };\n    const Word$shift_left1 = x0 => Word$shift_left1$(x0);\n\n    function Word$adder$(_a$2, _b$3, _c$4) {\n        var self = _a$2;\n        switch (self._) {\n            case 'Word.o':\n                var $142 = self.pred;\n                var $143 = (_b$7 => {\n                    var self = _b$7;\n                    switch (self._) {\n                        case 'Word.o':\n                            var $145 = self.pred;\n                            var $146 = (_a$pred$10 => {\n                                var self = _c$4;\n                                if (self) {\n                                    var $148 = Word$i$(Word$adder$(_a$pred$10, $145, Bool$false));\n                                    var $147 = $148;\n                                } else {\n                                    var $149 = Word$o$(Word$adder$(_a$pred$10, $145, Bool$false));\n                                    var $147 = $149;\n                                };\n                                return $147;\n                            });\n                            var $144 = $146;\n                            break;\n                        case 'Word.i':\n                            var $150 = self.pred;\n                            var $151 = (_a$pred$10 => {\n                                var self = _c$4;\n                                if (self) {\n                                    var $153 = Word$o$(Word$adder$(_a$pred$10, $150, Bool$true));\n                                    var $152 = $153;\n                                } else {\n                                    var $154 = Word$i$(Word$adder$(_a$pred$10, $150, Bool$false));\n                                    var $152 = $154;\n                                };\n                                return $152;\n                            });\n                            var $144 = $151;\n                            break;\n                        case 'Word.e':\n                            var $155 = (_a$pred$8 => {\n                                var $156 = Word$e;\n                                return $156;\n                            });\n                            var $144 = $155;\n                            break;\n                    };\n                    var $144 = $144($142);\n                    return $144;\n                });\n                var $141 = $143;\n                break;\n            case 'Word.i':\n                var $157 = self.pred;\n                var $158 = (_b$7 => {\n                    var self = _b$7;\n                    switch (self._) {\n                        case 'Word.o':\n                            var $160 = self.pred;\n                            var $161 = (_a$pred$10 => {\n                                var self = _c$4;\n                                if (self) {\n                                    var $163 = Word$o$(Word$adder$(_a$pred$10, $160, Bool$true));\n                                    var $162 = $163;\n                                } else {\n                                    var $164 = Word$i$(Word$adder$(_a$pred$10, $160, Bool$false));\n                                    var $162 = $164;\n                                };\n                                return $162;\n                            });\n                            var $159 = $161;\n                            break;\n                        case 'Word.i':\n                            var $165 = self.pred;\n                            var $166 = (_a$pred$10 => {\n                                var self = _c$4;\n                                if (self) {\n                                    var $168 = Word$i$(Word$adder$(_a$pred$10, $165, Bool$true));\n                                    var $167 = $168;\n                                } else {\n                                    var $169 = Word$o$(Word$adder$(_a$pred$10, $165, Bool$true));\n                                    var $167 = $169;\n                                };\n                                return $167;\n                            });\n                            var $159 = $166;\n                            break;\n                        case 'Word.e':\n                            var $170 = (_a$pred$8 => {\n                                var $171 = Word$e;\n                                return $171;\n                            });\n                            var $159 = $170;\n                            break;\n                    };\n                    var $159 = $159($157);\n                    return $159;\n                });\n                var $141 = $158;\n                break;\n            case 'Word.e':\n                var $172 = (_b$5 => {\n                    var $173 = Word$e;\n                    return $173;\n                });\n                var $141 = $172;\n                break;\n        };\n        var $141 = $141(_b$3);\n        return $141;\n    };\n    const Word$adder = x0 => x1 => x2 => Word$adder$(x0, x1, x2);\n\n    function Word$add$(_a$2, _b$3) {\n        var $174 = Word$adder$(_a$2, _b$3, Bool$false);\n        return $174;\n    };\n    const Word$add = x0 => x1 => Word$add$(x0, x1);\n\n    function Word$mul$go$(_a$3, _b$4, _acc$5) {\n        var Word$mul$go$ = (_a$3, _b$4, _acc$5) => ({\n            ctr: 'TCO',\n            arg: [_a$3, _b$4, _acc$5]\n        });\n        var Word$mul$go = _a$3 => _b$4 => _acc$5 => Word$mul$go$(_a$3, _b$4, _acc$5);\n        var arg = [_a$3, _b$4, _acc$5];\n        while (true) {\n            let [_a$3, _b$4, _acc$5] = arg;\n            var R = (() => {\n                var self = _a$3;\n                switch (self._) {\n                    case 'Word.o':\n                        var $175 = self.pred;\n                        var $176 = Word$mul$go$($175, Word$shift_left1$(_b$4), _acc$5);\n                        return $176;\n                    case 'Word.i':\n                        var $177 = self.pred;\n                        var $178 = Word$mul$go$($177, Word$shift_left1$(_b$4), Word$add$(_b$4, _acc$5));\n                        return $178;\n                    case 'Word.e':\n                        var $179 = _acc$5;\n                        return $179;\n                };\n            })();\n            if (R.ctr === 'TCO') arg = R.arg;\n            else return R;\n        }\n    };\n    const Word$mul$go = x0 => x1 => x2 => Word$mul$go$(x0, x1, x2);\n\n    function Word$to_zero$(_word$2) {\n        var self = _word$2;\n        switch (self._) {\n            case 'Word.o':\n                var $181 = self.pred;\n                var $182 = Word$o$(Word$to_zero$($181));\n                var $180 = $182;\n                break;\n            case 'Word.i':\n                var $183 = self.pred;\n                var $184 = Word$o$(Word$to_zero$($183));\n                var $180 = $184;\n                break;\n            case 'Word.e':\n                var $185 = Word$e;\n                var $180 = $185;\n                break;\n        };\n        return $180;\n    };\n    const Word$to_zero = x0 => Word$to_zero$(x0);\n\n    function Word$mul$(_a$2, _b$3) {\n        var $186 = Word$mul$go$(_a$2, _b$3, Word$to_zero$(_a$2));\n        return $186;\n    };\n    const Word$mul = x0 => x1 => Word$mul$(x0, x1);\n    const U32$mul = a0 => a1 => ((a0 * a1) >>> 0);\n\n    function VoxBox$new$(_length$1, _capacity$2, _buffer$3) {\n        var $187 = ({\n            _: 'VoxBox.new',\n            'length': _length$1,\n            'capacity': _capacity$2,\n            'buffer': _buffer$3\n        });\n        return $187;\n    };\n    const VoxBox$new = x0 => x1 => x2 => VoxBox$new$(x0, x1, x2);\n\n    function VoxBox$alloc_capacity$(_capacity$1) {\n        var _buffer$2 = (new Uint32Array(2 ** Number(U32$bit_length$(((2 * _capacity$1) >>> 0)))));\n        var $188 = VoxBox$new$(0, _capacity$1, _buffer$2);\n        return $188;\n    };\n    const VoxBox$alloc_capacity = x0 => VoxBox$alloc_capacity$(x0);\n    const String$nil = '';\n\n    function String$cons$(_head$1, _tail$2) {\n        var $189 = (String.fromCharCode(_head$1) + _tail$2);\n        return $189;\n    };\n    const String$cons = x0 => x1 => String$cons$(x0, x1);\n    const String$concat = a0 => a1 => (a0 + a1);\n\n    function String$repeat$(_xs$1, _n$2) {\n        var self = _n$2;\n        if (self === 0n) {\n            var $191 = String$nil;\n            var $190 = $191;\n        } else {\n            var $192 = (self - 1n);\n            var $193 = (_xs$1 + String$repeat$(_xs$1, $192));\n            var $190 = $193;\n        };\n        return $190;\n    };\n    const String$repeat = x0 => x1 => String$repeat$(x0, x1);\n\n    function Web$Kind$component$header_tab$(_is_active$1, _title$2) {\n        var self = _is_active$1;\n        if (self) {\n            var $195 = DOM$node$(\"span\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"padding\", \"5px 50px 5px 0px\"), List$cons$(Pair$new$(\"text-decoration\", \"underline\"), List$cons$(Pair$new$(\"font-size\", \"18px\"), List$cons$(Pair$new$(\"cursor\", \"pointer\"), List$nil))))), List$cons$(DOM$text$(_title$2), List$nil));\n            var $194 = $195;\n        } else {\n            var $196 = DOM$node$(\"span\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"padding\", \"5px 50px 5px 0px\"), List$cons$(Pair$new$(\"font-size\", \"18px\"), List$cons$(Pair$new$(\"cursor\", \"pointer\"), List$nil)))), List$cons$(DOM$text$(_title$2), List$nil));\n            var $194 = $196;\n        };\n        return $194;\n    };\n    const Web$Kind$component$header_tab = x0 => x1 => Web$Kind$component$header_tab$(x0, x1);\n    const Bool$and = a0 => a1 => (a0 && a1);\n\n    function Cmp$as_eql$(_cmp$1) {\n        var self = _cmp$1;\n        switch (self._) {\n            case 'Cmp.ltn':\n            case 'Cmp.gtn':\n                var $198 = Bool$false;\n                var $197 = $198;\n                break;\n            case 'Cmp.eql':\n                var $199 = Bool$true;\n                var $197 = $199;\n                break;\n        };\n        return $197;\n    };\n    const Cmp$as_eql = x0 => Cmp$as_eql$(x0);\n    const Cmp$ltn = ({\n        _: 'Cmp.ltn'\n    });\n    const Cmp$gtn = ({\n        _: 'Cmp.gtn'\n    });\n\n    function Word$cmp$go$(_a$2, _b$3, _c$4) {\n        var self = _a$2;\n        switch (self._) {\n            case 'Word.o':\n                var $201 = self.pred;\n                var $202 = (_b$7 => {\n                    var self = _b$7;\n                    switch (self._) {\n                        case 'Word.o':\n                            var $204 = self.pred;\n                            var $205 = (_a$pred$10 => {\n                                var $206 = Word$cmp$go$(_a$pred$10, $204, _c$4);\n                                return $206;\n                            });\n                            var $203 = $205;\n                            break;\n                        case 'Word.i':\n                            var $207 = self.pred;\n                            var $208 = (_a$pred$10 => {\n                                var $209 = Word$cmp$go$(_a$pred$10, $207, Cmp$ltn);\n                                return $209;\n                            });\n                            var $203 = $208;\n                            break;\n                        case 'Word.e':\n                            var $210 = (_a$pred$8 => {\n                                var $211 = _c$4;\n                                return $211;\n                            });\n                            var $203 = $210;\n                            break;\n                    };\n                    var $203 = $203($201);\n                    return $203;\n                });\n                var $200 = $202;\n                break;\n            case 'Word.i':\n                var $212 = self.pred;\n                var $213 = (_b$7 => {\n                    var self = _b$7;\n                    switch (self._) {\n                        case 'Word.o':\n                            var $215 = self.pred;\n                            var $216 = (_a$pred$10 => {\n                                var $217 = Word$cmp$go$(_a$pred$10, $215, Cmp$gtn);\n                                return $217;\n                            });\n                            var $214 = $216;\n                            break;\n                        case 'Word.i':\n                            var $218 = self.pred;\n                            var $219 = (_a$pred$10 => {\n                                var $220 = Word$cmp$go$(_a$pred$10, $218, _c$4);\n                                return $220;\n                            });\n                            var $214 = $219;\n                            break;\n                        case 'Word.e':\n                            var $221 = (_a$pred$8 => {\n                                var $222 = _c$4;\n                                return $222;\n                            });\n                            var $214 = $221;\n                            break;\n                    };\n                    var $214 = $214($212);\n                    return $214;\n                });\n                var $200 = $213;\n                break;\n            case 'Word.e':\n                var $223 = (_b$5 => {\n                    var $224 = _c$4;\n                    return $224;\n                });\n                var $200 = $223;\n                break;\n        };\n        var $200 = $200(_b$3);\n        return $200;\n    };\n    const Word$cmp$go = x0 => x1 => x2 => Word$cmp$go$(x0, x1, x2);\n    const Cmp$eql = ({\n        _: 'Cmp.eql'\n    });\n\n    function Word$cmp$(_a$2, _b$3) {\n        var $225 = Word$cmp$go$(_a$2, _b$3, Cmp$eql);\n        return $225;\n    };\n    const Word$cmp = x0 => x1 => Word$cmp$(x0, x1);\n\n    function Word$eql$(_a$2, _b$3) {\n        var $226 = Cmp$as_eql$(Word$cmp$(_a$2, _b$3));\n        return $226;\n    };\n    const Word$eql = x0 => x1 => Word$eql$(x0, x1);\n    const U16$eql = a0 => a1 => (a0 === a1);\n    const String$eql = a0 => a1 => (a0 === a1);\n\n    function Web$Kind$helper$is_current$(_title$1, _page$2) {\n        var self = _page$2;\n        switch (self._) {\n            case 'Web.KindWebsite.Page.home':\n                var $228 = (_title$1 === \"Home\");\n                var $227 = $228;\n                break;\n            case 'Web.KindWebsite.Page.apps':\n                var $229 = (_title$1 === \"Apps\");\n                var $227 = $229;\n                break;\n        };\n        return $227;\n    };\n    const Web$Kind$helper$is_current = x0 => x1 => Web$Kind$helper$is_current$(x0, x1);\n\n    function Web$Kind$component$header_tabs$(_page$1) {\n        var _titles$2 = List$cons$(\"Apps\", List$cons$(\"Home\", List$nil));\n        var _tabs$3 = List$nil;\n        var _tabs$4 = (() => {\n            var $232 = _tabs$3;\n            var $233 = _titles$2;\n            let _tabs$5 = $232;\n            let _title$4;\n            while ($233._ === 'List.cons') {\n                _title$4 = $233.head;\n                var $232 = List$cons$(Web$Kind$component$header_tab$(Web$Kind$helper$is_current$(_title$4, _page$1), _title$4), _tabs$5);\n                _tabs$5 = $232;\n                $233 = $233.tail;\n            }\n            return _tabs$5;\n        })();\n        var $230 = DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"padding-left\", \"20%\"), List$nil)), _tabs$4);\n        return $230;\n    };\n    const Web$Kind$component$header_tabs = x0 => Web$Kind$component$header_tabs$(x0);\n\n    function Web$Kind$component$header$(_page$1) {\n        var _vbox$2 = VoxBox$alloc_capacity$(100);\n        var _line$3 = DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"text-align\", \"center\"), List$cons$(Pair$new$(\"padding\", \"10px 50px 10px 50px\"), List$nil))), List$cons$(DOM$node$(\"p\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"color\", \"#9370DB\"), List$nil)), List$cons$(DOM$text$(String$repeat$(\"=\", 90n)), List$nil)), List$nil));\n        var $234 = DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$nil), List$cons$(DOM$node$(\"h2\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"margin-top\", \"40px\"), List$cons$(Pair$new$(\"font-family\", \"verdana\"), List$cons$(Pair$new$(\"text-align\", \"center\"), List$nil)))), List$cons$(DOM$text$(\"KIND language\"), List$nil)), List$cons$(_line$3, List$cons$(Web$Kind$component$header_tabs$(_page$1), List$nil))));\n        return $234;\n    };\n    const Web$Kind$component$header = x0 => Web$Kind$component$header$(x0);\n\n    function Web$Kind$component$body_container$(_ele$1) {\n        var $235 = DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"margin\", \"40px 20% 100px 20%\"), List$nil)), _ele$1);\n        return $235;\n    };\n    const Web$Kind$component$body_container = x0 => Web$Kind$component$body_container$(x0);\n    const Web$Kind$draw_page_home = (() => {\n        var _line$1 = (_txt$1 => {\n            var $237 = DOM$node$(\"p\", Map$from_list$(List$nil), Map$from_list$(List$nil), List$cons$(DOM$text$(_txt$1), List$nil));\n            return $237;\n        });\n        var _instructions$2 = DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"margin-top\", \"10px\"), List$cons$(Pair$new$(\"padding\", \"5px\"), List$cons$(Pair$new$(\"border\", \"1px solid\"), List$nil)))), List$cons$(_line$1(\"npm i -g kind-lang\"), List$cons$(_line$1(\"git clone https://github.com/uwu-tech/Kind\"), List$cons$(_line$1(\"cd Kind/base\"), List$cons$(_line$1(\"kind Main\"), List$cons$(_line$1(\"kind Main --run\"), List$nil))))));\n        var _install$2 = DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"margin\", \"20px 0px 20px 0px\"), List$nil)), List$cons$(Web$Kind$component$title$(\"Install\"), List$cons$(_instructions$2, List$nil)));\n        var _txt$3 = DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"margin-top\", \"10px\"), List$nil)), List$cons$(Web$Kind$component$list$(List$cons$(Web$Kind$component$link$(\" Github\", \"https://github.com/uwu-tech/Kind\"), List$cons$(Web$Kind$component$link$(\" Telegram\", \"https://t.me/formality_lang\"), List$nil))), List$nil));\n        var _join_us$3 = DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"margin\", \"20px 0px 20px 0px\"), List$nil)), List$cons$(Web$Kind$component$title$(\"Join Us\"), List$cons$(_txt$3, List$nil)));\n        var $236 = DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$nil), List$cons$(Web$Kind$component$header$(Web$KindWebsite$Page$home), List$cons$(Web$Kind$component$body_container$(List$cons$(_install$2, List$cons$(_join_us$3, List$nil))), List$nil)));\n        return $236;\n    })();\n\n    function Web$Kind$component$draw_page$(_page$1) {\n        var self = _page$1;\n        switch (self._) {\n            case 'Web.KindWebsite.Page.home':\n                var $239 = Web$Kind$draw_page_home;\n                var $238 = $239;\n                break;\n            case 'Web.KindWebsite.Page.apps':\n                var $240 = DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"padding\", \"20px\"), List$nil)), List$cons$(DOM$text$(\"Hello from Apps!\"), List$nil));\n                var $238 = $240;\n                break;\n        };\n        return $238;\n    };\n    const Web$Kind$component$draw_page = x0 => Web$Kind$component$draw_page$(x0);\n\n    function IO$(_A$1) {\n        var $241 = null;\n        return $241;\n    };\n    const IO = x0 => IO$(x0);\n\n    function IO$ask$(_query$2, _param$3, _then$4) {\n        var $242 = ({\n            _: 'IO.ask',\n            'query': _query$2,\n            'param': _param$3,\n            'then': _then$4\n        });\n        return $242;\n    };\n    const IO$ask = x0 => x1 => x2 => IO$ask$(x0, x1, x2);\n\n    function IO$bind$(_a$3, _f$4) {\n        var self = _a$3;\n        switch (self._) {\n            case 'IO.end':\n                var $244 = self.value;\n                var $245 = _f$4($244);\n                var $243 = $245;\n                break;\n            case 'IO.ask':\n                var $246 = self.query;\n                var $247 = self.param;\n                var $248 = self.then;\n                var $249 = IO$ask$($246, $247, (_x$8 => {\n                    var $250 = IO$bind$($248(_x$8), _f$4);\n                    return $250;\n                }));\n                var $243 = $249;\n                break;\n        };\n        return $243;\n    };\n    const IO$bind = x0 => x1 => IO$bind$(x0, x1);\n\n    function IO$end$(_value$2) {\n        var $251 = ({\n            _: 'IO.end',\n            'value': _value$2\n        });\n        return $251;\n    };\n    const IO$end = x0 => IO$end$(x0);\n\n    function IO$monad$(_new$2) {\n        var $252 = _new$2(IO$bind)(IO$end);\n        return $252;\n    };\n    const IO$monad = x0 => IO$monad$(x0);\n\n    function Dynamic$new$(_value$2) {\n        var $253 = ({\n            _: 'Dynamic.new',\n            'value': _value$2\n        });\n        return $253;\n    };\n    const Dynamic$new = x0 => Dynamic$new$(x0);\n    const Unit$new = null;\n    const App$pass = IO$monad$((_m$bind$1 => _m$pure$2 => {\n        var $254 = _m$pure$2;\n        return $254;\n    }))(Dynamic$new$(Unit$new));\n\n    function App$new$(_init$2, _draw$3, _when$4) {\n        var $255 = ({\n            _: 'App.new',\n            'init': _init$2,\n            'draw': _draw$3,\n            'when': _when$4\n        });\n        return $255;\n    };\n    const App$new = x0 => x1 => x2 => App$new$(x0, x1, x2);\n    const Web$KindWebsite = (() => {\n        var _init$1 = Web$KindWebsite$State$new$(Pair$new$(500, 400), Web$KindWebsite$Page$home);\n        var _draw$2 = (_state$2 => {\n            var self = _state$2;\n            switch (self._) {\n                case 'Web.KindWebsite.State.new':\n                    var $258 = self.page;\n                    var $259 = Web$Kind$component$draw_page$($258);\n                    var $257 = $259;\n                    break;\n            };\n            return $257;\n        });\n        var _when$3 = (_event$3 => _state$4 => {\n            var self = _event$3;\n            switch (self._) {\n                case 'App.Event.init':\n                case 'App.Event.tick':\n                case 'App.Event.dom':\n                case 'App.Event.mouse_down':\n                case 'App.Event.mouse_up':\n                case 'App.Event.key_down':\n                case 'App.Event.key_up':\n                case 'App.Event.post':\n                    var $261 = App$pass;\n                    var $260 = $261;\n                    break;\n            };\n            return $260;\n        });\n        var $256 = App$new$(_init$1, _draw$2, _when$3);\n        return $256;\n    })();\n    return {\n        'Web.KindWebsite.State.new': Web$KindWebsite$State$new,\n        'Pair.new': Pair$new,\n        'U32.new': U32$new,\n        'Nat.apply': Nat$apply,\n        'Word': Word,\n        'Word.e': Word$e,\n        'Word.i': Word$i,\n        'Word.o': Word$o,\n        'Word.inc': Word$inc,\n        'Word.zero': Word$zero,\n        'Nat.to_word': Nat$to_word,\n        'Nat.succ': Nat$succ,\n        'Nat.zero': Nat$zero,\n        'Nat.to_u32': Nat$to_u32,\n        'Web.KindWebsite.Page.home': Web$KindWebsite$Page$home,\n        'DOM.node': DOM$node,\n        'BitsMap': BitsMap,\n        'Map': Map,\n        'BitsMap.new': BitsMap$new,\n        'BitsMap.tie': BitsMap$tie,\n        'Maybe.some': Maybe$some,\n        'Maybe.none': Maybe$none,\n        'BitsMap.set': BitsMap$set,\n        'Bits.e': Bits$e,\n        'Bits.o': Bits$o,\n        'Bits.i': Bits$i,\n        'Bits.concat': Bits$concat,\n        'Word.to_bits': Word$to_bits,\n        'U16.to_bits': U16$to_bits,\n        'String.to_bits': String$to_bits,\n        'Map.from_list': Map$from_list,\n        'List.nil': List$nil,\n        'Pair': Pair,\n        'List.cons': List$cons,\n        'DOM.text': DOM$text,\n        'Web.Kind.component.title': Web$Kind$component$title,\n        'List.for': List$for,\n        'List': List,\n        'Web.Kind.component.list': Web$Kind$component$list,\n        'Web.Kind.component.link': Web$Kind$component$link,\n        'Buffer32.new': Buffer32$new,\n        'Array': Array,\n        'Array.tip': Array$tip,\n        'Array.tie': Array$tie,\n        'Array.alloc': Array$alloc,\n        'U32.zero': U32$zero,\n        'Buffer32.alloc': Buffer32$alloc,\n        'Word.bit_length.go': Word$bit_length$go,\n        'Word.bit_length': Word$bit_length,\n        'U32.bit_length': U32$bit_length,\n        'Bool.false': Bool$false,\n        'Bool.true': Bool$true,\n        'Word.shift_left1.aux': Word$shift_left1$aux,\n        'Word.shift_left1': Word$shift_left1,\n        'Word.adder': Word$adder,\n        'Word.add': Word$add,\n        'Word.mul.go': Word$mul$go,\n        'Word.to_zero': Word$to_zero,\n        'Word.mul': Word$mul,\n        'U32.mul': U32$mul,\n        'VoxBox.new': VoxBox$new,\n        'VoxBox.alloc_capacity': VoxBox$alloc_capacity,\n        'String.nil': String$nil,\n        'String.cons': String$cons,\n        'String.concat': String$concat,\n        'String.repeat': String$repeat,\n        'Web.Kind.component.header_tab': Web$Kind$component$header_tab,\n        'Bool.and': Bool$and,\n        'Cmp.as_eql': Cmp$as_eql,\n        'Cmp.ltn': Cmp$ltn,\n        'Cmp.gtn': Cmp$gtn,\n        'Word.cmp.go': Word$cmp$go,\n        'Cmp.eql': Cmp$eql,\n        'Word.cmp': Word$cmp,\n        'Word.eql': Word$eql,\n        'U16.eql': U16$eql,\n        'String.eql': String$eql,\n        'Web.Kind.helper.is_current': Web$Kind$helper$is_current,\n        'Web.Kind.component.header_tabs': Web$Kind$component$header_tabs,\n        'Web.Kind.component.header': Web$Kind$component$header,\n        'Web.Kind.component.body_container': Web$Kind$component$body_container,\n        'Web.Kind.draw_page_home': Web$Kind$draw_page_home,\n        'Web.Kind.component.draw_page': Web$Kind$component$draw_page,\n        'IO': IO,\n        'IO.ask': IO$ask,\n        'IO.bind': IO$bind,\n        'IO.end': IO$end,\n        'IO.monad': IO$monad,\n        'Dynamic.new': Dynamic$new,\n        'Unit.new': Unit$new,\n        'App.pass': App$pass,\n        'App.new': App$new,\n        'Web.KindWebsite': Web$KindWebsite,\n    };\n})();"],"sourceRoot":""}