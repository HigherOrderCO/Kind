{"version":3,"sources":["webpack://kind-web/./src/apps/Web.MeuApp.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,SAAS;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,I","file":"321.index.js","sourcesContent":["module.exports = (function() {\n    function word_to_u16(w) {\n        var u = 0;\n        for (var i = 0; i < 16; ++i) {\n            u = u | (w._ === 'Word.i' ? 1 << i : 0);\n            w = w.pred;\n        };\n        return u;\n    };\n\n    function u16_to_word(u) {\n        var w = {\n            _: 'Word.e'\n        };\n        for (var i = 0; i < 16; ++i) {\n            w = {\n                _: (u >>> (16 - i - 1)) & 1 ? 'Word.i' : 'Word.o',\n                pred: w\n            };\n        };\n        return w;\n    };\n\n    function u16_to_bits(x) {\n        var s = '';\n        for (var i = 0; i < 16; ++i) {\n            s = (x & 1 ? '1' : '0') + s;\n            x = x >>> 1;\n        }\n        return s;\n    };\n\n    function word_to_u32(w) {\n        var u = 0;\n        for (var i = 0; i < 32; ++i) {\n            u = u | (w._ === 'Word.i' ? 1 << i : 0);\n            w = w.pred;\n        };\n        return u;\n    };\n\n    function u32_to_word(u) {\n        var w = {\n            _: 'Word.e'\n        };\n        for (var i = 0; i < 32; ++i) {\n            w = {\n                _: (u >>> (32 - i - 1)) & 1 ? 'Word.i' : 'Word.o',\n                pred: w\n            };\n        };\n        return w;\n    };\n\n    function u32_for(state, from, til, func) {\n        for (var i = from; i < til; ++i) {\n            state = func(i)(state);\n        }\n        return state;\n    };\n\n    function word_to_u64(w) {\n        var u = 0n;\n        for (var i = 0n; i < 64n; i += 1n) {\n            u = u | (w._ === 'Word.i' ? 1n << i : 0n);\n            w = w.pred;\n        };\n        return u;\n    };\n\n    function u64_to_word(u) {\n        var w = {\n            _: 'Word.e'\n        };\n        for (var i = 0n; i < 64n; i += 1n) {\n            w = {\n                _: (u >> (64n - i - 1n)) & 1n ? 'Word.i' : 'Word.o',\n                pred: w\n            };\n        };\n        return w;\n    };\n\n    function u32array_to_buffer32(a) {\n        function go(a, buffer) {\n            switch (a._) {\n                case 'Array.tip':\n                    buffer.push(a.value);\n                    break;\n                case 'Array.tie':\n                    go(a.lft, buffer);\n                    go(a.rgt, buffer);\n                    break;\n            }\n            return buffer;\n        };\n        return new Uint32Array(go(a, []));\n    };\n\n    function buffer32_to_u32array(b) {\n        function go(b) {\n            if (b.length === 1) {\n                return {\n                    _: 'Array.tip',\n                    value: b[0]\n                };\n            } else {\n                var lft = go(b.slice(0, b.length / 2));\n                var rgt = go(b.slice(b.length / 2));\n                return {\n                    _: 'Array.tie',\n                    lft,\n                    rgt\n                };\n            };\n        };\n        return go(b);\n    };\n\n    function buffer32_to_depth(b) {\n        return BigInt(Math.log(b.length) / Math.log(2));\n    };\n    const inst_bool = x => x(true)(false);\n    const elim_bool = (x => {\n        var $2 = (() => c0 => c1 => {\n            var self = x;\n            if (self) {\n                var $0 = c2;\n                return $0;\n            } else {\n                var $1 = c2;\n                return $1;\n            };\n        })();\n        return $2;\n    });\n    const inst_nat = x => x(0n)(x0 => 1n + x0);\n    const elim_nat = (x => {\n        var $6 = (() => c0 => c1 => {\n            var self = x;\n            if (self === 0n) {\n                var $3 = c2;\n                return $3;\n            } else {\n                var $4 = (self - 1n);\n                var $5 = c2($4);\n                return $5;\n            };\n        })();\n        return $6;\n    });\n    const inst_u16 = x => x(x0 => word_to_u16(x0));\n    const elim_u16 = (x => {\n        var $9 = (() => c0 => {\n            var self = x;\n            switch ('u16') {\n                case 'u16':\n                    var $7 = u16_to_word(self);\n                    var $8 = c0($7);\n                    return $8;\n            };\n        })();\n        return $9;\n    });\n    const inst_u32 = x => x(x0 => word_to_u32(x0));\n    const elim_u32 = (x => {\n        var $12 = (() => c0 => {\n            var self = x;\n            switch ('u32') {\n                case 'u32':\n                    var $10 = u32_to_word(self);\n                    var $11 = c0($10);\n                    return $11;\n            };\n        })();\n        return $12;\n    });\n    const inst_u64 = x => x(x0 => word_to_u64(x0));\n    const elim_u64 = (x => {\n        var $15 = (() => c0 => {\n            var self = x;\n            switch ('u64') {\n                case 'u64':\n                    var $13 = u64_to_word(self);\n                    var $14 = c0($13);\n                    return $14;\n            };\n        })();\n        return $15;\n    });\n    const inst_string = x => x('')(x0 => x1 => (String.fromCharCode(x0) + x1));\n    const elim_string = (x => {\n        var $20 = (() => c0 => c1 => {\n            var self = x;\n            if (self.length === 0) {\n                var $16 = c2;\n                return $16;\n            } else {\n                var $17 = self.charCodeAt(0);\n                var $18 = self.slice(1);\n                var $19 = c2($17)($18);\n                return $19;\n            };\n        })();\n        return $20;\n    });\n    const inst_buffer32 = x => x(x0 => x1 => u32array_to_buffer32(x1));\n    const elim_buffer32 = (x => {\n        var $24 = (() => c0 => {\n            var self = x;\n            switch ('b32') {\n                case 'b32':\n                    var $21 = buffer32_to_depth(self);\n                    var $22 = buffer32_to_u32array(self);\n                    var $23 = c0($21)($22);\n                    return $23;\n            };\n        })();\n        return $24;\n    });\n\n    function App$Render$txt$(_text$1) {\n        var $25 = ({\n            _: 'App.Render.txt',\n            'text': _text$1\n        });\n        return $25;\n    };\n    const App$Render$txt = x0 => App$Render$txt$(x0);\n    const List$nil = ({\n        _: 'List.nil'\n    });\n\n    function App$Action$(_S$1) {\n        var $26 = null;\n        return $26;\n    };\n    const App$Action = x0 => App$Action$(x0);\n\n    function App$new$(_init$2, _draw$3, _when$4) {\n        var $27 = ({\n            _: 'App.new',\n            'init': _init$2,\n            'draw': _draw$3,\n            'when': _when$4\n        });\n        return $27;\n    };\n    const App$new = x0 => x1 => x2 => App$new$(x0, x1, x2);\n    const Web$MeuApp = App$new$(0n, (_state$1 => {\n        var $28 = App$Render$txt$(\"oi tudo bem?\");\n        return $28;\n    }), (_event$1 => _state$2 => {\n        var $29 = List$nil;\n        return $29;\n    }));\n    return {\n        'App.Render.txt': App$Render$txt,\n        'List.nil': List$nil,\n        'App.Action': App$Action,\n        'App.new': App$new,\n        'Web.MeuApp': Web$MeuApp,\n    };\n})();"],"sourceRoot":""}