type App <S: Type> {
  new(
    init: S
    draw: S -> DOM
    when: App.Event -> S -> IO<Dynamic>
  )
}

type App.EnvInfo {
  new(
    screen_size: Pair<U32, U32>
    mouse_pos: Pair<U32, U32>
  )
}

App.UserAddress: Type
  String

type App.Event {
  init(
    time: U64
    user: App.UserAddress
    info: App.EnvInfo
  )
  tick(
    time: U64
    info: App.EnvInfo
  )
  // The event occurs when the user presses a mouse button over an element and before it is released
  mouse_down(
    time: U64
    button: U16
  )
  // The event occurs when a user releases a mouse button over an element
  mouse_up(
    time: U64
    button: U16
  )
  key_down(
    time: U64
    code: U16
  )
  key_up(
    time: U64
    code: U16
  )
  post(
    time: U64
    room: String
    addr: String
    data: String
  )
  // The event occurs when the pointer is moved onto an element, or onto one of its children
  mouse_over(
    time: U64
    id: String
  )
  // The event occurs when a user moves the mouse pointer out of an element, or out of one of its children
  mouse_out(
    time: U64
    id: String
  )
  // The event occurs when the user clicks on an element. It's fired after the mousedown and mouseup events
  mouse_click(
    time: U64
    id: String
    action: String
  )
  resize(
    time: U64
    info: App.EnvInfo
  )
}