BitsMap.to_list.go<A: Type>(xs: BitsMap<A>, key: Bits, list: List<Pair<Bits,A>>): List<Pair<Bits,A>>
  case xs {
    new:
      list,
    tie: 
      let list0 = case xs.val {
        none: list,
        some: List.cons!(Pair.new!!(Bits.reverse(key), xs.val.value), list),
      };
      let list1 = BitsMap.to_list.go!(xs.lft, Bits.o(key), list0);
      let list2 = BitsMap.to_list.go!(xs.rgt, Bits.i(key), list1);
      list2
  }