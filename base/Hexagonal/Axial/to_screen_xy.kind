// Converts Axial coordinates to Canvas coordinate
Hexagonal.Axial.to_screen_xy(
  coord: Hexagonal.Axial,
  radius: I32,
  center_x: I32,
  center_y: I32
): Pair<U32,U32> // TODO add alias

  open coord
  let i = coord.i
  let j = coord.j
  
  let i = I32.to_f64(i)
  let j = I32.to_f64(j)
  let int_rad = I32.to_f64(radius)
  let hlf = F64.div(int_rad, 2.0#64)
  let int_screen_center_x = I32.to_f64(center_x)
  let int_screen_center_y = I32.to_f64(center_y)
  
  let cx = int_screen_center_x + j * int_rad  // screen_center + j * rad
  let cx = cx + i * int_rad * 2 // screen_center + j * rad + i * 2rad
  let cy = I32.to_f64(F64.to_i32(hlf * 3)) // fix rounding of odd radius
  let cy = int_screen_center_y + j * cy // screen_center + j * (3rad/2)
  
  let cx = F64.to_u32(cx)
  let y = cy + 0.5 // to round correctly
  let cy = F64.to_u32(cy)
  {cx, cy}
