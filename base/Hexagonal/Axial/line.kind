// Returns a list of coordinates in-line from a start to a goal
Hexagonal.Axial.line(
  start: Hexagonal.Axial,
  goal: Hexagonal.Axial
): List<Hexagonal.Axial>

  open start
  open goal

  let {si, sj} = {I32.to_f64(start.i), I32.to_f64(start.j)}
  let {gi, gj} = {I32.to_f64(goal.i), I32.to_f64(goal.j)}
  
  let coords = []
  let distance = I32.to_nat(Hexagonal.Axial.distance(start, goal))
  for i from 0 to distance with coords:
    let i = F64.from_nat(i + 1)
    let distance = F64.from_nat(distance)
    let ratio = i/distance
    let inter_x = F64.lerp(si, gi, ratio)
    let inter_y = F64.lerp(sj, gj, ratio)
    let {new_i, new_j} = Hexagonal.Axial.round(inter_x, inter_y)
    Hexagonal.Axial.new(new_i, new_j) & coords
  coords
