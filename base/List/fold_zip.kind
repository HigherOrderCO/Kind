List.fold_zip<A: Type, B: Type>(xs: List<A>, ys: List<B>)<C: Type>(fn: A -> B -> C, nil: C, cons: C -> C -> C): C
  case xs {
    nil: nil
    cons: case ys {
      nil: nil
      cons: cons(fn(xs.head, ys.head), List.fold_zip<A, B>(xs.tail, ys.tail)<C>(fn, nil, cons))
    }
  }
