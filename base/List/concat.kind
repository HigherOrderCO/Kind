// concatenates two lists
// example:
//   xs = [3, 4]
//   ys = [1, 2]
//   List.concat<Nat>(xs, ys) == [3, 4, 1, 2]
List.concat<A: Type>(xs: List<A>, ys: List<A>): List<A>
  case xs {
    nil: ys
    cons: List.cons!(xs.head, List.concat!(xs.tail, ys))
  }

// this is also where we define concat the cat
// please type softly he's sleeping
//
// concat: Cat
//   Zzzzz  |\      _,,,--,,_     
//         /,`.-'`'   ._  \-;;,_  
//        |,4-  ) )_   .;.(  `'-' 
//       '---''(_/._)-'(_\_)      
