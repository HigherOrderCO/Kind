Mons.Map.get_hero(pos: Pos32, map: Mons.Map): Pair<Mons.Object, U32>
  let tile = Mons.Map.get_list(pos, map)
  let obj_is_hero = ((obj) Mons.Kind.is_hero(Mons.Object.get_kin(obj))) :: Mons.Object -> Bool 
  let fun = ((obj, idx) obj_is_hero(obj)) :: Mons.Object -> Nat -> Bool
  let both = List.ifind!(tile, fun)
  case both { 
    none: {Mons.Object.void, 0#32}
    some: 
      let hero = Pair.fst!!(both.value)
      let idx = Nat.to_u32(Pair.snd!!(both.value))
      {hero, idx}//Pair.new!!(hero, idx)
  }