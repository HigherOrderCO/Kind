ListMap.map<A: Type, B: Type>(fn: A -> B, lm: ListMap<A>): ListMap<B>
  case lm { 
    empty: ListMap.empty<B>
    cons:
      let new_pair = Pair.map<Nat, A, B>(fn, lm.head)
      ListMap.cons<B>(new_pair, ListMap.map<A, B>(fn, lm.tail))
  }
