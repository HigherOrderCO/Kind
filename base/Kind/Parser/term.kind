Kind.Parser.term: Parser(Kind.Term)
  Parser {
    get init = Kind.Parser.init;
    get term = Parser.first_of!([
      Kind.Parser.forall,
      Kind.Parser.lambda,
      Kind.Parser.lambda.erased,
      Kind.Parser.lambda.nameless,
      Kind.Parser.parenthesis,
      Kind.Parser.letforrange.u32,
      Kind.Parser.letforrange.nat,
      Kind.Parser.letforin,
      Kind.Parser.let,
      Kind.Parser.get,
      Kind.Parser.def,
      Kind.Parser.goal_rewrite,
      Kind.Parser.if,
      Kind.Parser.char,
      Kind.Parser.string,
      Kind.Parser.pair,
      Kind.Parser.sigma.type,
      Kind.Parser.some,
      Kind.Parser.apply,
      Kind.Parser.mirror,
      Kind.Parser.list,
      Kind.Parser.map,
      Kind.Parser.log,
      Kind.Parser.do,
      Kind.Parser.case,
      Kind.Parser.open,
      Kind.Parser.without,
      Kind.Parser.switch,
      Kind.Parser.goal,
      Kind.Parser.hole,
      Kind.Parser.u8,
      Kind.Parser.u16,
      Kind.Parser.u32,
      Kind.Parser.u64,
      Kind.Parser.nat,
      Kind.Parser.reference,
    ]);
    Kind.Parser.suffix(init, term);
  }
