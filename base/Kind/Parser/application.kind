Kind.Parser.application(func: Kind.Term): Parser(Kind.Term)
  Parser {
    get args = Kind.Parser.items_now!("(", Kind.Parser.term, ")")
    let expr = List.for!(args)!(func, (x,f) Kind.Term.app(f, x))
    return expr
  }

Kind.Parser.application.erased(func: Kind.Term): Parser(Kind.Term)
  Parser {
    get args = Kind.Parser.items_now!("<", Kind.Parser.term, ">")
    let expr = List.for!(args)!(func, (x,f) Kind.Term.app(f, x))
    return expr
  }

Kind.Parser.application.hole(term: Kind.Term): Parser(Kind.Term)
  Parser {
    Kind.Parser.text_now("!")
    return Kind.Term.app(term, Kind.Term.hol(Bits.e))
  }
