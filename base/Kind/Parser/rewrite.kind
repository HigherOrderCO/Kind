Kind.Parser.rewrite(init: Nat, subt: Kind.Term): Parser(Kind.Term)
  Parser {
    Kind.Parser.text("::");
    Kind.Parser.text("rewrite");
    get name = Kind.Parser.name1;
    Kind.Parser.text("in");
    get type = Kind.Parser.term;
    Kind.Parser.text("with");
    get iseq = Kind.Parser.term;
    get orig = Kind.Parser.stop(init);
    let term = Kind.Term.ref("Equal.rewrite");
    let term = Kind.Term.app(term, Kind.Term.hol(Bits.e));
    let term = Kind.Term.app(term, Kind.Term.hol(Bits.e));
    let term = Kind.Term.app(term, Kind.Term.hol(Bits.e));
    let term = Kind.Term.app(term, iseq);
    let term = Kind.Term.app(term, Kind.Term.lam(name, (x) type));
    let term = Kind.Term.app(term, subt);
    return Kind.Term.ori(orig, term);
  }
