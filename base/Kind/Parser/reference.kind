Kind.Parser.reference: Parser(Kind.Term)
  Kind.Parser.block("reference", Parser {
    get name = Kind.Parser.name1
    if String.eql(name, "Type") then Parser {
      return Kind.Term.typ
    } else if String.eql(name, "true") then Parser {
      return Kind.Term.ref("Bool.true")
    } else if String.eql(name, "false") then Parser {
      return Kind.Term.ref("Bool.false")
    } else if String.eql(name, "unit") then Parser {
      return Kind.Term.ref("Unit.new")
    } else if String.eql(name, "none") then Parser {
      let term = Kind.Term.ref("Maybe.none")
      let term = Kind.Term.app(term, Kind.Term.hol(Bits.e))
      return term
    } else if String.eql(name, "refl") then Parser {
      let term = Kind.Term.ref("Equal.refl")
      let term = Kind.Term.app(term, Kind.Term.hol(Bits.e))
      let term = Kind.Term.app(term, Kind.Term.hol(Bits.e))
      return term
    } else Parser {
      return Kind.Term.ref(name)
    }
  })
