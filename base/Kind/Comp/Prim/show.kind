// Converts a primitive to a String
Kind.Comp.Prim.show(prim: Kind.Comp.Prim): String
  case prim {
    unit: "Unit"
    bool: "Bool"
    nat: "Nat"
    u16: "U16"
    string: "String"
    data: Kind.Comp.Prim.show.ctrs(prim.ctrs)
  }

Kind.Comp.Prim.show.ctr(ctr: Pair(String, List(String))): String
  let {name, fields} = ctr
  name | "[" | String.join(",", fields) | "]"

Kind.Comp.Prim.show.ctrs(ctrs: List(Pair(String, List(String)))): String
  let ctrs = List.mapped!(ctrs)!(Kind.Comp.Prim.show.ctr)
  "data{" | String.join("|", ctrs) | "}"
