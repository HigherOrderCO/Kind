Kind.Term.has_holes(term: Kind.Term): Bool
  case term {
    all: Bool.or(Kind.Term.has_holes(term.xtyp), Kind.Term.has_holes(term.body(Kind.Term.typ,Kind.Term.typ))),
    lam: Kind.Term.has_holes(term.body(Kind.Term.typ)),
    app: Bool.or(Kind.Term.has_holes(term.func), Kind.Term.has_holes(term.argm)),
    let: Bool.or(Kind.Term.has_holes(term.expr), Kind.Term.has_holes(term.body(Kind.Term.typ))),
    def: Bool.or(Kind.Term.has_holes(term.expr), Kind.Term.has_holes(term.body(Kind.Term.typ))),
    ann: Bool.or(Kind.Term.has_holes(term.term), Kind.Term.has_holes(term.type)),
    hol: true,
    ori: Kind.Term.has_holes(term.expr),
  } default false
