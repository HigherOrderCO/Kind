Queue.init<A: Type>(q: Queue<A>): Maybe<Queue<A>>
  open q
  case q.rear {
    nil: case q.front {
      nil : Maybe.none<Queue<A>>,
      cons: 
        let new_f  = List.drop<A>(1, q.front)
        let new_sf = Nat.sub(q.size_front, 1)
        let new_q  = Queue.balance<A>(new_f, new_sf, List.nil<A>, 0)
        Maybe.some<Queue<A>>(new_q)
    },
    cons:
      let new_r  = List.drop<A>(1, q.rear)
      let new_sr = Nat.sub(q.size_rear, 1)
      let new_q  = Queue.balance<A>(q.front, q.size_front, new_r, new_sr)
      Maybe.some<Queue<A>>(new_q)
  }