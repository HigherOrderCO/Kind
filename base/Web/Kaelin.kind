Web.Kaelin.Room(kaelin_room: String): String
  "0x4b4145" | kaelin_room

Web.Kaelin.ChatGeral: String
  Web.Kaelin.Room("000000")

Web.Kaelin.GlobalLobby: String
  Web.Kaelin.Room("100000")

Web.Kaelin.GameZero: String
  Web.Kaelin.Room("200000")

// A demo application that renders a square on the screen
Web.Kaelin: App(Pair(U32,U32))
  // Allocates the mutable buffer
  let img = Image3D.alloc_capacity(256u)

  // Application state: just a position
  let init = {128u, 128u}

  // Render loop: draws a square at the stored position
  let draw = (state)
    let {pos_x, pos_y} = state
    let col = (x, y)
      let r = U32.add(96u,U32.mul(x,4u)) // red from 96 to 160
      let g = U32.add(96u,U32.mul(x,4u)) // green from 96 to 160
      let b = 128u                       // blue constant 128
      let a = 255u                       // alpha constant 255
      Col32.new(r, g, b, a)
    let img = Image3D.clear(img)
    let img = Image3D.Draw.square(pos_x, pos_y, 128u, 16u, 16u, col, img)
    App.Render.pix(img)

  // Event handler: moves the position when ASDW are pressed
  let when = (event, state)
    case event {
      init: []
      tick: []
      xkey: if event.down then [
        App.Action.state!(
          let {x, y} = state
          switch U16.eql(event.code) {
            'A': {U32.sub(x, 4u), y}
            'D': {U32.add(x, 4u), y}
            'W': {x, U32.sub(y, 4u)}
            'S': {x, U32.add(y, 4u)}
          } default {x, y})
        ] else []
      post: []
    }

  // The application
  App.new!(init, draw, when)
