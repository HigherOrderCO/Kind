Web.TicTacToe: App<List<List<String>>>

  place_style = {
    "cursor": "pointer"
  }

  init = [["A", "b", "c"], ["d", "e", "f"], ["g", "h", "i"]]

  draw = (state)
    let v00 = (state[0] <> [])[0] <> ""
    let v10 = (state[0] <> [])[1] <> ""
    let v20 = (state[0] <> [])[2] <> ""
    let v01 = (state[1] <> [])[0] <> ""
    let v11 = (state[1] <> [])[1] <> ""
    let v21 = (state[1] <> [])[2] <> ""
    let v02 = (state[2] <> [])[0] <> ""
    let v12 = (state[2] <> [])[1] <> ""
    let v22 = (state[2] <> [])[2] <> ""
    DOM.node("div", {}, {}, [
      DOM.text("Estado: " | List.show!(String.join(","), state))
      DOM.node("table", {}, {}, [
        DOM.node("tr", {}, {}, [
          DOM.node("td", {"id": "00"}, place_style, [DOM.text(v00)])
          DOM.node("td", {"id": "10"}, place_style, [DOM.text(v10)])
          DOM.node("td", {"id": "20"}, place_style, [DOM.text(v20)])
        ])
        DOM.node("tr", {}, {}, [
          DOM.node("td", {"id": "01"}, place_style, [DOM.text(v01)])
          DOM.node("td", {"id": "11"}, place_style, [DOM.text(v11)])
          DOM.node("td", {"id": "21"}, place_style, [DOM.text(v21)])
        ])
        DOM.node("tr", {}, {}, [
          DOM.node("td", {"id": "02"}, place_style, [DOM.text(v02)])
          DOM.node("td", {"id": "12"}, place_style, [DOM.text(v12)])
          DOM.node("td", {"id": "22"}, place_style, [DOM.text(v22)])
        ])
      ])
    ])

  when = (event, state)
    case event {
      key_down: IO {
        let key = String.cons(event.code, String.nil)
        App.store!([[key,key,key],[key,key,key],[key,key,key]])
      }
      mouse_click: IO {
        let id = event.id
        App.store!([[id,id,id],[id,id,id],[id,id,id]])
      }
    } default App.pass

  App.new!(init, draw, when)
