// Serializes an event to a 256-bit hex string ("0x000....")
// only a draft
// waiting for I32

generate_hex(xs : List<U8>, ys : List<Bits>) : String
  let consumer = List.zip(U8, Bits, Web.Kaelin.Event.Code.action ++ xs, ys)
  "0x" | Hex.set_min_length(64, Web.Kaelin.Event.Code.generate_hex(consumer))

Web.Kaelin.Event.serialize(event: Web.Kaelin.Event): String
 case event {
   create_hero :  
     let cod = [
         Nat.to_bits(1),
         Nat.to_bits(U8.to_nat(event.hero_id))
       ]
      generate_hex(Web.Kaelin.Event.Code.create_hero, cod)
   create_user : ""
   start_game : ""
   user_input : 
     let cod = [
       Nat.to_bits(4),
       Web.Kaelin.Resources.Action.to_bits(event.action),
       Web.Kaelin.Coord.Convert.axial_to_bits(event.coord)
       ]

     generate_hex(Web.Kaelin.Event.Code.user_input, cod)
    }

  //case event {
    //// 0x
    //// 1 - type of event
    //// 8 - player coord x
    //// 8 - player coord y
    //// 8 - player hero ?
    //// 40 - player user ?
    //create_user:
      //open event.player as player
      //open player.coord as coord

      //let result = "0x"
      //let type_event = "1"
      //let coord_x = Int.to_nat(coord.i)
  //} default "0x" | String.repeat("0", 256)
