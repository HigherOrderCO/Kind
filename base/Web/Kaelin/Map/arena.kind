// The 'Arena' map
Web.Kaelin.Map.arena: Web.Kaelin.Map
  let map = NatMap.new!
  let map_size = Web.Kaelin.Constants.map_size
  let width = U32.add(U32.mul(map_size, 2#32), 1#32) // map_size * 2 + 1
  let height = U32.add(U32.mul(map_size, 2#32), 1#32) // map_size * 2 + 1
  let background_entity = Web.Kaelin.Entity.background(Web.Kaelin.Assets.tile.dark_grass_4)

  // loops through the half of the map_size
  for j : U32 from 0#32 to height with map:
    for i : U32 from 0#32 to width with map:
      // generate int axial coordinate
      let coord_i = Int.sub(Int.new(0, U32.to_nat(i)), Int.new(0, U32.to_nat(map_size))) // i - map_size
      let coord_j = Int.sub(Int.new(0, U32.to_nat(j)), Int.new(0, U32.to_nat(map_size))) // j - map_size
      let coord = Web.Kaelin.Coord.new(coord_i, coord_j)
      let fit = Web.Kaelin.Coord.fit(coord, map_size)

      case fit {
        true:
          Web.Kaelin.Map.push(coord, background_entity, map)
        false:
          map
      }
    map
  map
