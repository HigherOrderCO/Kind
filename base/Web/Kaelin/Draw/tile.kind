Web.Kaelin.Draw.tile(
  coord: Web.Kaelin.Coord, 
  map: Web.Kaelin.Map, 
  img: Image3D
) : Image3D
  open coord
  let {cx,cy} = Web.Kaelin.Coord.to_screen_xy(coord)
  let tile = Web.Kaelin.Map.get(coord, map)
  for ent in tile with img:
    let cx = U32.sub(cx, Web.Kaelin.Resources.hexagon_radius)
    case ent{
      background:
        let cy = U32.sub(cy, Web.Kaelin.Resources.hexagon_radius)
        Image3D.Draw.image(cx, cy, 0u, ent.img, img)
      char:
        let aux_y = U32.mul(Web.Kaelin.Resources.hexagon_radius, 2u)
        let cy = U32.sub(cy, aux_y)
        Image3D.Draw.image(cx, cy, 0u, ent.img, img)
    }
  img

Web.Kaelin.Draw.tile.empty(
  coord: Web.Kaelin.Coord, 
  map: Web.Kaelin.Map, 
  img: Image3D
) : Image3D
  open coord
  let {cx,cy} = Web.Kaelin.Coord.to_screen_xy(coord)
  let cx = U32.add(U32.sub(cx, Web.Kaelin.Resources.hexagon_radius), 3u)
  let str = String.concat(Int.show(coord.i), Int.show(coord.j))
  Image3D.Draw.text(str, PixelFont.small_black, Pos32.new(cx,cy,0u), img)