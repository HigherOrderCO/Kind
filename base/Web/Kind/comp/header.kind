Web.Kind.comp.header(stt: Web.Kind.State): DOM
  let vbox = VoxBox.alloc_capacity(100#32)
  let line = 
    DOM.node("div", {}, {
        "margin":  "auto"
        "max-width": "65em"
        }, 
      [ DOM.node("div", {}, {
        "height": "4px"
        "border-top": Web.Kind.constant.primary_color | " dashed 1px"
        "border-bottom": Web.Kind.constant.primary_color | " dashed 1px"
        "margin-top": "1em"
        "margin-bottom": "1em"
        "margin-left": "15%"
        "margin-right": "15%"
        }, []) ]
    )

  DOM.node("div", {}, {}, [
    DOM.node("h2", {}, {
      "margin-top" : "40px"
      "font-family": "verdana"
      "text-align" : "center"
      }, [DOM.text("KIND language")]),
    line,
    Web.Kind.comp.header_tabs(stt)
  ])

// Setup the tabs to change page
Web.Kind.comp.header_tabs(stt: Web.Kind.State): DOM
  open stt
  let tabs = [
    Web.Kind.comp.header_tab(
      Web.Kind.helper.is_eql(Web.Kind.Page.home, stt.page), 
      String.eql("tab_home", stt.mouse_over)
      "Home", "tab_home")

    Web.Kind.comp.header_tab(
      Web.Kind.helper.is_eql(Web.Kind.Page.apps, stt.page),
      String.eql("tab_apps", stt.mouse_over)
      "Apps", "tab_apps")
  ]
  case stt.device {
    phone: 
      DOM.node("div", {}, {
      "padding-left": "30px"
      "display": "flex"
      "flex-direction": "row"
      }, tabs)
  } default 
    DOM.node("div", {}, {
    "padding-left": "20%"
    "display": "flex"
    "flex-direction": "row"
    }, tabs)


// Configure a tab
Web.Kind.comp.header_tab(
  is_active: Bool, 
  is_hover: Bool, 
  title: String, 
  id: String): DOM
  let normal = {
    "margin-right": "30px"
    "font-size": "18px"
    "cursor": "pointer"
    "width": "70px"
    "padding-bottom": "4px"
    "display": "flex"
    "justify-content": "center"
    }
  let active = {
    "border-style": "none none solid none"
    "border-color": Web.Kind.constant.secondary_color
    "border-width": "thin"
    }
  let hover = {
    "border-style": "none none solid none"
    "border-color": Web.Kind.constant.light_gray_color
    "border-width": "thin"
    }
  DOM.node("div", {"id": id}, 
    if is_active then Map.union!(normal, active)
    else if is_hover then Map.union!(normal, hover)
    else normal,
    [DOM.text(title)])