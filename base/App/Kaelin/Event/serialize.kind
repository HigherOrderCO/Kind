// Serializes an event to a 256-bit hex string ("0x000....")
// only a draft
// waiting for I32

generate_hex(xs : List<U8>, ys : List<Bits>) : String
  let consumer = List.zip(U8, Bits, App.Kaelin.Event.Code.action ++ xs, ys)
  "0x" | App.Kaelin.Event.Code.Hex.set_min_length(64, App.Kaelin.Event.Code.generate_hex(consumer))

App.Kaelin.Event.serialize(
  event: App.Kaelin.Event
): String
  case event {
    create_hero:  
      let cod = [
        Nat.to_bits(1),
        U8.to_bits(event.hero_id)
      ]
      generate_hex(App.Kaelin.Event.Code.create_hero, cod)
    
    create_user : ""
    start_game : ""
    user_input : 
      let cod = [
        Nat.to_bits(4),
        Nat.to_bits(App.Kaelin.Event.Code.Hex.to_nat(event.player))
        App.Kaelin.Resources.Action.to_bits(event.action),
        App.Kaelin.Coord.Convert.axial_to_bits(event.coord)
      ]
      generate_hex(App.Kaelin.Event.Code.user_input, cod)

    exe_skill:
      let cod = [  
        Nat.to_bits(5),
        Nat.to_bits(App.Kaelin.Event.Code.Hex.to_nat(event.player))
        App.Kaelin.Coord.Convert.axial_to_bits(event.target_pos),
        U16.to_bits(event.key)
      ]
      generate_hex(App.Kaelin.Event.Code.exe_skill, cod)

    save_skill:
      let cod = [  
        Nat.to_bits(11),
        Nat.to_bits(App.Kaelin.Event.Code.Hex.to_nat(event.player))
        App.Kaelin.Coord.Convert.axial_to_bits(event.target_pos),
        U16.to_bits(event.key)
        U8.to_bits(App.Kaelin.Team.code(event.team))
      ]
      generate_hex(App.Kaelin.Event.Code.save_skill, cod)

    remove_skill:
      let cod = [  
        Nat.to_bits(12),
        Nat.to_bits(App.Kaelin.Event.Code.Hex.to_nat(event.player))
        App.Kaelin.Coord.Convert.axial_to_bits(event.target_pos),
        U16.to_bits(event.key)
        U8.to_bits(App.Kaelin.Team.code(event.team))
      ]
      generate_hex(App.Kaelin.Event.Code.remove_skill, cod)

    end_action:
      let cod = [
        Nat.to_bits(13)
      ]
      generate_hex([], cod)

    draft_hero:
      let cod = [
        Nat.to_bits(6),
        U8.to_bits(event.hero)
      ]
      generate_hex(App.Kaelin.Event.Code.draft_hero, cod)

    draft_coord:
      let cod = [
        Nat.to_bits(7)
        App.Kaelin.Coord.Convert.axial_to_bits(event.coord)
      ]
      generate_hex(App.Kaelin.Event.Code.draft_coord, cod)

    draft_end:
      let cod = [
        Nat.to_bits(8)
      ]
      generate_hex([], cod)

    to_draft:
      let cod = [
        Nat.to_bits(9)
      ]
      generate_hex([], cod)

    draft_team:
      let cod = [
        Nat.to_bits(10)
        U8.to_bits(event.team)
      ]
      generate_hex(App.Kaelin.Event.Code.draft_team, cod)
  }


  //case event {
    //// 0x
    //// 1 - type of event
    //// 8 - player coord x
    //// 8 - player coord y
    //// 8 - player hero ?
    //// 40 - player user ?
    //create_user:
      //open event.player as player
      //open player.coord as coord

      //let result = "0x"
      //let type_event = "1"
      //let coord_x = Int.to_nat(coord.i)
  //} default "0x" | String.repeat("0", 256)
