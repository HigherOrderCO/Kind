App.Kaelin.Event.deserialize_scheme : App.Kaelin.Event.Buffer<App.Kaelin.Event>
 def next = App.Kaelin.Event.Buffer.next
 def text = App.Kaelin.Event.Buffer.hex!((x) x)
 def push = App.Kaelin.Event.Buffer.push
 def fail = App.Kaelin.Event.Buffer.fail

 App.Kaelin.Event.Buffer {
   push(App.Kaelin.Event.Code.action)
   get id_event = next
   switch (Nat.eql(id_event)) {
     1 : 
       App.Kaelin.Event.Buffer {
         push(App.Kaelin.Event.Code.create_hero)
         get id_hero = next
         return App.Kaelin.Event.create_hero(Nat.to_u8(id_hero))
       }
    4 : 
      App.Kaelin.Event.Buffer {
        push(App.Kaelin.Event.Code.user_input)
        get player = text
        get action = App.Kaelin.Resources.Action.to_action
        get pos = next
        return App.Kaelin.Event.user_input("0x" | player, 
                 App.Kaelin.Coord.Convert.nat_to_axial(pos), action)
      }
    5 : 
      App.Kaelin.Event.Buffer {
        push(App.Kaelin.Event.Code.skill_use)
        get hero_pos = next
        get mouse_pos = next
        get key = next
        return App.Kaelin.Event.skill_use(App.Kaelin.Coord.Convert.nat_to_axial(hero_pos),
          App.Kaelin.Coord.Convert.nat_to_axial(mouse_pos)
          Nat.to_u16(key))
      }
   } default fail!
 }

App.Kaelin.Event.deserialize(
  code: String
): Maybe(App.Kaelin.Event)

  App.Kaelin.Event.Buffer.Monad.run!(App.Kaelin.Event.deserialize_scheme, code)
