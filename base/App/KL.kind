// STATE
// =====

type App.KL.State.Local {
  lobby(state: App.KL.Lobby.State.Local)
  game(state: App.KL.Game.State.Local)
}

App.KL.State: App.State
  App.State.new(App.KL.State.Local, App.KL.Global.State)

// APP
// ===

// Initial state
App.KL.init: App.Init<App.KL.State>
  let local = App.KL.State.Local.lobby(App.KL.Lobby.State.Local.new("", App.KL.Lobby.State.Local.Page.front("")))
  let global = App.KL.Global.State.new(none)
  App.Store.new<App.KL.State>(local, global)

// Render function
App.KL.draw(img: VoxBox): App.Draw<App.KL.State>
  (state)
  let {local, global} = state
  case local {
    lobby: App.KL.Lobby.draw(local.state, global)
    game: App.KL.Game.draw(img, local.state, global)
  }

// Event handler
App.KL.when: App.When<App.KL.State>
  (event, state)
  let {local, global} = state
  case local {
    lobby: App.KL.Lobby.when(local.state, global, event)
    game: App.KL.Game.when(local.state, global, event) // should we pass global stage here?
  }

// A "KL, world!" + counter application
App.KL: App<App.KL.State>
  let img = VoxBox.alloc_capacity(U32.mul(65536#32, 8#32))
  App.new<App.KL.State>(
    App.KL.init
    App.KL.draw(img)
    App.KL.when
    App.KL.Global.tick
    App.KL.Global.post
  )
