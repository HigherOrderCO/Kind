App.KL.Game.Effect.hp.heal_at(
  heal: I32,
): App.KL.Game.Effect.At<I32>
  (pos)

  App.KL.Game.Effect { 
    get creature = App.KL.Game.Effect.board.creature.get(pos)
    get real_heal = App.KL.Game.Effect.hp.change_at(heal, pos)
    let heals = String.show_clean(I32.show(real_heal))
    App.KL.Game.Effect.description.add("Heal for"| heals)
    get caster = App.KL.Game.Effect.board.creature.caster
    case creature { 
      none: App.KL.Game.Effect { return +0#32 } 
      some: 
        case caster {
          none:
            App.KL.Game.Effect { return real_heal }
          some:
            App.KL.Game.Effect {
              App.KL.Game.Effect.player_data.caster.add.heal(creature.value@player <> "", real_heal, creature.value@hp + real_heal)
              return real_heal
            }
        }
    }
  }
