//TODO?: create additional tabs for checking stats or skills of a hero

// DRAFT WHEN
// ==================

// AUX FUNCTIONS
// ==============================

// check if player has a coord
App.KL.Game.Phase.Draft.has_hero(hero_id: U8, player: Pair<String, App.KL.Game.Player>): Bool
  x = player@snd@hero_id
  case x {
    none: false
    some: U8.eql(Nat.to_u8(x.value), hero_id)
  }

App.KL.Game.Phase.Draft.has_coord(coord: Hexagonal.Axial, player: Pair<String, App.KL.Game.Player>): Bool
  x = player@snd@init_pos
  case x {
    none: false
    some: Hexagonal.Axial.eql(x.value, coord)
  }

// get team of a player
App.KL.Game.Phase.Draft.to_team(players: Map<App.KL.Game.Player>, user: String): Maybe<App.KL.Game.Team>
  player = players{user}
  case player {
    none: none
    some: some(player.value@team)
  }


// DRAW
// ===============================

// BOARD CREATION
// ====================

App.KL.Game.Phase.Draft.create_board(players: Map<App.KL.Game.Player>): App.KL.Game.Board
  log(" - criando mapa")
  board = App.KL.Game.Board.Blueprint.build.board(App.KL.Game.Board.Boards.arena)
  for user:player in players with board:    
    App.KL.Game.Board.PLayer.set(user, player, board)
  board
