App.KL.Game.Phase.Draft.when(
  //players: Map<App.KL.Game.Player>,
  local  : App.KL.Game.State.Local
  global : App.KL.Game
  event  : App.Event,
): IO<Maybe<App.State.local<App.KL.State>>>
  let players = global@players
  let room = String.take(16, Crypto.Keccak.hash(local@room))

  case event {
    mouse_click:
      switch String.starts_with(event.id) {
        "C" : // Set initial position 
          let coord_nat = String.drop(1, event.id)
          let coord     = Hexagonal.Axial.from_nat(Nat.read(coord_nat))
          App.new_post!(room, App.KL.Game.Phase.Draft.Event.set_init_pos.serial(coord))
        "H" : // Set Player Hero
          let hero_name = String.drop(1, event.id)
          let hero_id   = Maybe.map!!(Nat.to_u8, App.KL.Game.Hero.name_to_id(hero_name))
          case hero_id {
            none: App.pass!
            some: App.new_post!(room, App.KL.Game.Phase.Draft.Event.set_hero.serial(hero_id.value))
          }
        "R" : // Toggle Ready
          let player = players{local@user}
          case player {
            none: App.pass!
            some:
              let can_ready = App.KL.Game.Player.has_hero_and_pos(player.value)
              let ready_u8 = 
                if player.value@ready then 
                  0#8 
                else if can_ready then 
                  1#8 
                else 
                  0#8
              App.new_post!(room, App.KL.Game.Phase.Draft.Event.set_ready.serial(ready_u8))
          }        
        "T" : // Set a team
          let player_count = String.drop(1, event.id)
          if String.starts_with(player_count, "3") then
            App.pass!
          else
            let team = String.drop(1, player_count)
            let team = switch String.eql(team){
              "blue": App.KL.Game.Team.blue
              "red" : App.KL.Game.Team.red
            } default App.KL.Game.Team.neutral
            App.new_post!(room, App.KL.Game.Phase.Draft.Event.set_team.serial(team))
      } default App.pass!
  mouse_over:
    switch String.starts_with(event.id) {
      "D": // Set which tab to show
        let tab   = String.drop(1, event.id)
        let local = case tab {
          nil: local 
          cons: local@tab <- tab
        }
        App.set_local!(App.KL.State.Local.game(local))
    }default App.set_local!(App.KL.State.Local.game(local@tab <- "D"))
  } default App.pass!

