type App.KL.Game.Hero {
  new(
    name: String
    draw: App.KL.Game.Hero.Draw.Pose -> App.KL.Game.Hero.Draw.Result
    picture: Bool -> U64 -> String // rename to portrait?
    max_hp: I32
    max_ap: I32
    skills: Map<App.KL.Game.Skill> // letter -> skill
    //on_turn_end: App.KL.Game.Creature -> App.KL.Game.Creature //TODO: ADD
    on_stepped: Maybe<App.KL.Game.Effect.FromTo<Unit>>
    description: String
  )
}

type App.KL.Game.Hero.Draw.Pose {
  idle
  cast(
    frame: U64
    center: Hexagonal.Axial
    target: List<Hexagonal.Axial>
    letter: Char
    skill: App.KL.Game.Skill
    creature: App.KL.Game.Creature
  )
}


App.KL.Game.Hero.Draw.Result: Type
  Pair<Maybe<Hexagonal.Axial>, VoxBox>


