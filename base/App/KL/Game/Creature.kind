type App.KL.Game.Creature {
  new(
    player: Maybe<String>
    hero: App.KL.Game.Hero
    team: App.KL.Game.Team
    status: List<App.KL.Game.Creature.Status>
    hp: I32
    ap: I32
  )
}

type App.KL.Game.Creature.Status {
  burn(
    id: String
    duration: I32
    amount: I32
  )
  haste(
    duration : I32
    amount: I32
  )
  poison(
    id: String
    duration: I32
    amount: I32
  )
  root(
    duration: I32
  )
  silence(
    duration: I32
  )
  stun(
    duration: I32
  )
  shield(
    id: String
    duration: I32
    amount: I32
  )
  weaken(
    duration : I32
    amount: I32
  )
}

App.KL.Game.Creature.Status.get_effect(
  status: App.KL.Game.Creature.Status
): App.KL.Game.Effect.At<I32>
  
  case status { 
    burn: App.KL.Game.Effect.status.burn.apply(status.id, status.duration, status.amount)
    //haste:
    poison: App.KL.Game.Effect.status.poison.apply(status.id, status.duration, status.amount)

    //root:
    //silence:
    //stun:
    //shield:
    //weaken:
  } default (pos)App.KL.Game.Effect { return +0#32 }
    



//1 função que 
//1 -> Verifica se tem DoT, se tiver, aplica na criatura
//2 -> Ela também diminui a duração
