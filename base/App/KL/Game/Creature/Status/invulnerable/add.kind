App.KL.Game.Creature.Status.invulnerable.add(
  creature: App.KL.Game.Creature
  cast_data: Pair<Char, String>
  id: String
  duration: I32
): App.KL.Game.Creature
  
  let invulnerability_added = App.KL.Game.Creature.Status.invulnerable.add.aux(cast_data, id, duration, creature@status)
  creature@status <- invulnerability_added

App.KL.Game.Creature.Status.invulnerable.add.aux(
  cast_data: Pair<Char, String>
  id: String
  duration: I32
  status: List<App.KL.Game.Creature.Status>
): List<App.KL.Game.Creature.Status>

  let new_invulnerable = App.KL.Game.Creature.Status.invulnerable(cast_data, id, duration)
  case status { 
    nil:
      new_invulnerable & status
    cons:
      case status.head { 
        invulnerable: 
          status
      }default status.head & App.KL.Game.Creature.Status.invulnerable.add.aux(cast_data, id, duration, status.tail)
  }
