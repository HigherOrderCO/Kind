App.KL.Game.Hero.Croni.hero: App.KL.Game.Hero
  let name = "Croni"

  let vbox_img = (pose)
    {none, App.KL.Game.Hero.Croni.Assets.vbox_img}

  let b64_portrait = (bool, time)
    App.KL.Game.Hero.Croni.Assets.b64_portrait

  let b64_img = (bool, time)
    App.KL.Game.Hero.Croni.Assets.b64_img

  let height = 18 :: I32 // Distance from center of image to the top of it

  let draw = App.KL.Game.Entity.Draw.new(vbox_img, b64_portrait, b64_img, height)

  let max_hp = 12 :: I32

  let max_ap = 3 :: I32

  let walk_range = {2,2} ::Pair<I32, I32>
  let flux_range = {10,10}::Pair<I32, I32>
  let trap_range = {10,10} ::Pair<I32, I32>
  let void_range = {8,8} ::Pair<I32, I32>

  let skills = {
    "X": App.KL.Game.Skill.walk(2, name)

    "Q": App.KL.Game.Skill.new(
      "Flux", 860, 48,
      (board, center, targets) Hexagonal.Axial.range(center, trap_range@fst),
      App.KL.Game.Skill.Pattern.single,
      App.KL.Game.Hero.Croni.hero.Skills.flux(trap_range@snd, 12, 1), 
      "Croni casts a targeted dark flux, dealing 12 damage in a single area.",
      App.KL.Game.Cursor.attack
    )

    "W": App.KL.Game.Skill.new(
      "Trap", 150, 24,
      (board, center, targets) Hexagonal.Axial.range(center, flux_range@fst),
      App.KL.Game.Skill.Pattern.multiple_no_repeat(2),
      App.KL.Game.Hero.Croni.hero.Skills.trap(flux_range@snd, 1),
      "Croni summons a Trap that roots when stepped on.",
      App.KL.Game.Cursor.attack
    )

    "E": App.KL.Game.Skill.new(
      "Void", 880, 24,
      (board, center, targets) Hexagonal.Axial.range(center, void_range@fst),
      App.KL.Game.Skill.Pattern.single,
      App.KL.Game.Hero.Croni.hero.Skills.void(void_range@snd, 1),
      "Croni summons a Void that blocks movement. Can be reactivated to root around it.",
      App.KL.Game.Cursor.attack
    )

  }

   let attributes =
    App.KL.Game.Hero.Attributes.set(
      5 // Damage
      1 // Resistance
      2 // Mobility
      5 // Range
      2 // Utility
      4 // Difficulty
  )

  let role = App.KL.Game.Hero.Role.ranged

  let description = "Croni is a fragile mage with slow skills that deal high damage from afar."

  App.KL.Game.Hero.new(name, draw, max_hp, max_ap, skills, attributes, role, description)


// SKILLS

App.KL.Game.Hero.Croni.hero.Skills.trap(range: I32, ap_cost: I32): App.KL.Game.Effect<Unit>
  App.KL.Game.Effect {
    App.KL.Game.Effect.limit_range(range)
    get targets = App.KL.Game.Effect.coord.get_targets
    get center  = App.KL.Game.Effect.coord.get_center
    get caster  = App.KL.Game.Effect.board.creature.caster
    get board   = App.KL.Game.Effect.board.get
    let team    = case caster { none: App.KL.Game.Team.neutral, some: caster.value@team }
    App.KL.Game.Effect.ap.use(ap_cost)
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.red_fill, targets)
    let category = App.KL.Game.Creature.Category.summon(App.KL.Game.Hero.Croni.summon.trap)
    let trap = App.KL.Game.Creature.new(none, category, team, [], App.KL.Game.Hero.Croni.summon.trap@max_hp)
    App.KL.Game.Effect.area!(App.KL.Game.Effect.board.summon(trap), targets)
    return unit
  }

App.KL.Game.Hero.Croni.hero.Skills.flux(range: I32, dmg: I32, ap_cost: I32): App.KL.Game.Effect<Unit>
  App.KL.Game.Effect {
    get target = App.KL.Game.Effect.coord.get_target
    get center = App.KL.Game.Effect.coord.get_center
    let area = [target]
    App.KL.Game.Effect.limit_range(range)
    App.KL.Game.Effect.ap.use(ap_cost)
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.blue_fill, [center])
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.red_fill, area)
    App.KL.Game.Effect.area!(App.KL.Game.Effect.At.enemy!(App.KL.Game.Effect.hp.damage_at(dmg)), area)
    return unit
  }

App.KL.Game.Hero.Croni.hero.Skills.void(range: I32, ap_cost: I32): App.KL.Game.Effect<Unit>
  App.KL.Game.Effect {
    App.KL.Game.Effect.limit_range(range)
    get target = App.KL.Game.Effect.coord.get_target
    get center = App.KL.Game.Effect.coord.get_center
    get board = App.KL.Game.Effect.board.get
    get caster = App.KL.Game.Effect.board.creature.caster
    get targeted = App.KL.Game.Effect.board.creature.target
    App.KL.Game.Effect.ap.use(ap_cost)
    case targeted {
      none: App.KL.Game.Effect {
        let team = case caster { none: App.KL.Game.Team.neutral, some: caster.value@team }
        App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.red_fill, [target])
        let mhp = App.KL.Game.Hero.Croni.summon.void@max_hp
        let category = App.KL.Game.Creature.Category.summon(App.KL.Game.Hero.Croni.summon.void)
        let trap = App.KL.Game.Creature.new(none, category, team, [], mhp)
        App.KL.Game.Effect.board.summon(trap, target)
      }
      some: 
        let name = App.KL.Game.Board.Creature.get.name(targeted.value)
        if String.eql(name, "Croni.Void") then
          App.KL.Game.Effect {
            let area = App.KL.Game.Hero.Croni.hero.Skills.void.area(target, board)
            App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.red_fill, area)
            App.KL.Game.Effect.area!(App.KL.Game.Effect.At.enemy!(App.KL.Game.Effect.status.root.add(2)), area)
            return unit
          }
        else App.KL.Game.Effect.pass
    }
  }

App.KL.Game.Hero.Croni.hero.Skills.void.area.go(
  pos: Hexagonal.Axial
  board: App.KL.Game.Board
  area: Hexagonal.Axial.Map<Unit>
): Hexagonal.Axial.Map<Unit>
  let target = App.KL.Game.Board.Creature.get(pos, board)
  case target {
    none: area
    some: 
      let name = App.KL.Game.Board.Creature.get.name(target.value)
      if String.eql(name, "Croni.Void") then
        let area = Hexagonal.Axial.Map.set!(pos, unit, area)
        let inner_ring = App.KL.Game.Areas.ring(pos,1)
        let outer_ring = App.KL.Game.Areas.ring(pos,2)
        let area = for new_pos in inner_ring ++ outer_ring:
          case Hexagonal.Axial.Map.get!(new_pos, area) as got {
            none: App.KL.Game.Hero.Croni.hero.Skills.void.area.go(new_pos, board, area)
            some: area
          }
        let area = for new_pos in inner_ring:
          Hexagonal.Axial.Map.set!(new_pos, unit, area)
        area
      else
        area
  }

App.KL.Game.Hero.Croni.hero.Skills.void.area(
  pos: Hexagonal.Axial
  board: App.KL.Game.Board
): List<Hexagonal.Axial>
  Hexagonal.Axial.Map.keys!(App.KL.Game.Hero.Croni.hero.Skills.void.area.go(pos, board, Hexagonal.Axial.Map.new!))

// ~~~~~~~~~~

App.KL.Game.Hero.Croni.summon.trap: App.KL.Game.Summon
  let name = "Croni.Trap"
  let vbox_img = (pose) {none, App.KL.Game.Field.Elements.mushroom_0_0}
  let b64_portrait = (bool, time) App.KL.Game.Hero.Croni.Assets.b64_portrait
  let b64_img = (bool, time) App.KL.Game.Hero.Croni.Assets.b64_portrait
  let height = 20 :: I32
  let draw = App.KL.Game.Entity.Draw.new(vbox_img, b64_portrait, b64_img, height)
  let max_hp = 6 :: I32
  let on_stepped = some((from,to) App.KL.Game.Effect {
    App.KL.Game.Effect.board.creature.move(from, to)
    App.KL.Game.Effect.status.root.add(2, to)
    return unit
  })
  let description = "A Trap created by Croni that stuns whoever steps on it"
  App.KL.Game.Summon.new(name, draw, max_hp, on_stepped, description)

App.KL.Game.Hero.Croni.summon.void: App.KL.Game.Summon
  let name = "Croni.Void"
  let vbox_img = (pose) {none, App.KL.Game.Field.Elements.baner_1}
  let b64_portrait = (bool, time) App.KL.Game.Hero.Croni.Assets.b64_portrait
  let b64_img = (bool, time) App.KL.Game.Hero.Croni.Assets.b64_portrait
  let height = 20 :: I32
  let draw = App.KL.Game.Entity.Draw.new(vbox_img, b64_portrait, b64_img, height)
  let max_hp = 6 :: I32
  let on_stepped = some((from,to) App.KL.Game.Effect {
    //App.KL.Game.Effect.board.creature.move(from, to)
    //App.KL.Game.Effect.status.stun.add(2, to)
    return unit
  })
  let description = "A Void created by Croni"
  App.KL.Game.Summon.new(name, draw, max_hp, on_stepped, description)
