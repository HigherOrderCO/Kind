App.KL.Game.Hero.Zoio.hero: App.KL.Game.Hero
  let name = "Zoio"

  let vbox_img = (pose)
    {none, App.KL.Game.Hero.Zoio.Assets.pic_zoio}

  let b64_portrait = (bool, time)
    App.KL.Game.Hero.Zoio.Assets.b64_portrait
  
  let b64_img = (bool, time)
    App.KL.Game.Hero.Zoio.Assets.b64_img

  let height = 20 :: I32 // Distance from center of image to the top of it

  let draw = App.KL.Game.Entity.Draw.new(vbox_img, b64_portrait, b64_img, height)

  let max_hp = 18 :: I32

  let max_ap = 3 :: I32

  let skills = {
    "X": App.KL.Game.Skill.walk(1, name)

    "Q": App.KL.Game.Skill.new(
      "Tentackle", 300, 48,
      (board, center, targets) Hexagonal.Axial.range(center, 2),
      App.KL.Game.Skill.Pattern.single,
      App.KL.Game.Hero.Zoio.hero.Skills.tentackle(2, 4, 1),
      "Zoio quickly hits an enemy with his Tentacle, dealing 4 damage and poisoning the enemy.",
      App.KL.Game.Cursor.attack
    )

    "W": App.KL.Game.Skill.new(
      "Eye Beam", 480, 48,
      (board, center, targets) Hexagonal.Axial.range(center, 1),
      App.KL.Game.Skill.Pattern.single,
      App.KL.Game.Hero.Zoio.hero.Skills.eye_beam(16, 8, 2),
      "Zoio fires a powerful beam across the whole battlefield, dealing 8 damage and doting all enemies hit.",
      App.KL.Game.Cursor.attack
    )

    "E": App.KL.Game.Skill.new(
      "Blinkaboom", 800, 48,
      (board, center, targets) Hexagonal.Axial.range(center, 32),
      App.KL.Game.Skill.Pattern.single,
      App.KL.Game.Hero.Zoio.hero.Skills.blinkaboom(16, 16, 3),
      "After a brief delay, Zoio blinks to a tile, sacrificing himself to deal high damage across the battlefield.",
      App.KL.Game.Cursor.attack
    )
  }

   let attributes =
    App.KL.Game.Hero.Attributes.set(
      5 // Damage
      2 // Resistance
      1 // Mobility
      5 // Range
      0 // Utility
      3 // Difficulty
  )

  let role = App.KL.Game.Hero.Role.ranged

  let description = "Zoio is a fragile mage that has no range limitations in his Eye Beam. However, his movement is extremely slow."

  App.KL.Game.Hero.new(name, draw, max_hp, max_ap, skills, attributes, role, description)

App.KL.Game.Hero.Zoio.hero.Skills.eye_beam(size: I32, dmg: I32, ap_cost: I32): App.KL.Game.Effect<Unit>
  App.KL.Game.Effect { 
    App.KL.Game.Effect.limit_range(size)
    App.KL.Game.Effect.ap.use(ap_cost)
    get center = App.KL.Game.Effect.coord.get_center
    get target = App.KL.Game.Effect.coord.get_target
    let area = App.KL.Game.Areas.straight_line(size, center, target)
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.red_fill, area)
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.blue_fill, [center])
    let enemy = App.KL.Game.Effect.At.enemy!
    let effect = App.KL.Game.Effect.hp.damage_at(dmg)
    App.KL.Game.Effect.area!(enemy(App.KL.Game.Effect.status.dot.add("Zoio", 3, 1)), area)
    App.KL.Game.Effect.area!(enemy(effect), area)
    return unit
  }

App.KL.Game.Hero.Zoio.hero.Skills.tentackle(range: I32, dmg: I32, ap_cost: I32): App.KL.Game.Effect<Unit>
  App.KL.Game.Effect { 
    App.KL.Game.Effect.limit_range(range)
    App.KL.Game.Effect.ap.use(ap_cost)
    get target = App.KL.Game.Effect.coord.get_target
    get center = App.KL.Game.Effect.coord.get_center
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.blue_fill, [center])
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.red_fill, [target])
    //App.KL.Game.Effect.area!(App.KL.Game.Effect.At.enemy!(App.KL.Game.Effect.movement.push_at(false)), [target])
    App.KL.Game.Effect.At.enemy!(App.KL.Game.Effect.status.dot.add("tentackle", 2, 2), target)
    App.KL.Game.Effect.At.enemy!(App.KL.Game.Effect.hp.damage_at(dmg), target)
    return unit
  }

App.KL.Game.Hero.Zoio.hero.Skills.blinkaboom(size: I32, dmg: I32, ap_cost: I32): App.KL.Game.Effect<Unit>
  App.KL.Game.Effect { 
    get target = App.KL.Game.Effect.coord.get_target
    get center = App.KL.Game.Effect.coord.get_center
    let ring = App.KL.Game.Areas.ring(target, 1)
    let area = []
    let area = for direction_coord in ring:
      App.KL.Game.Areas.straight_line(size, target, direction_coord) ++ area
    get moved = App.KL.Game.Effect.movement.move_to(center, target, false)
    if moved then
      App.KL.Game.Effect { 
        App.KL.Game.Effect.ap.use(ap_cost)
        App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.blue_fill, [center])
        App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.red_fill, target & area)
        App.KL.Game.Effect.area!(App.KL.Game.Effect.At.enemy!(App.KL.Game.Effect.hp.damage_at(dmg)), area)
        App.KL.Game.Effect.hp.suicide
        return unit
      }
    else App.KL.Game.Effect.fail("unable to move") 
  }
