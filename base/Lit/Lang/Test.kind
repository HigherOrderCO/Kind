Lit.Lang.Test: String
`

type BoolList {
  nil
  cons{
    head: Bool
    tail: NatList
  }
}

type NatList {
  nil
  cons{
    head: Nat
    tail: BoolList
  }
}

Count.inc, MrDog @ Count(): Bits
  Bits/o{pred: Bits/e}

Count.inc(): Unit
  call c = Count();
  call d = Bits.inc(c);
  bind Count = d;
  Unit/new

do {
  call ret = Bits.add(Bits/i{pred:Bits/i{pred: Bits/e}}, Bits/i{pred: Bits/e})
  call dupped = Bits.dup(ret)
  0
}

`
